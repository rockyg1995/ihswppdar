
DA5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018c  00800100  00001912  000019a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001912  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000041  0080028c  0080028c  00001b32  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ec6  00000000  00000000  00001cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f69  00000000  00000000  00003bbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c57  00000000  00000000  00004b27  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  00005780  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000753  00000000  00000000  00005a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a60  00000000  00000000  000061bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00006c1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	12 e0       	ldi	r17, 0x02	; 2
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e2 e1       	ldi	r30, 0x12	; 18
     1ca:	f9 e1       	ldi	r31, 0x19	; 25
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	ac 38       	cpi	r26, 0x8C	; 140
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	22 e0       	ldi	r18, 0x02	; 2
     1da:	ac e8       	ldi	r26, 0x8C	; 140
     1dc:	b2 e0       	ldi	r27, 0x02	; 2
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ad 3c       	cpi	r26, 0xCD	; 205
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 2e 02 	call	0x45c	; 0x45c <main>
     1ec:	0c 94 87 0c 	jmp	0x190e	; 0x190e <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <__vector_1>:
		}
	}
}

//	Interrupt on IRQ pin
ISR(INT0_vect) {
     1f4:	1f 92       	push	r1
     1f6:	0f 92       	push	r0
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	0f 92       	push	r0
     1fc:	11 24       	eor	r1, r1
     1fe:	8f 93       	push	r24
	message_received = true;
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <message_received>
}
     206:	8f 91       	pop	r24
     208:	0f 90       	pop	r0
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	0f 90       	pop	r0
     20e:	1f 90       	pop	r1
     210:	18 95       	reti

00000212 <print_config>:

void print_config(void) {
     212:	cf 93       	push	r28
     214:	df 93       	push	r29
     216:	1f 92       	push	r1
     218:	cd b7       	in	r28, 0x3d	; 61
     21a:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
     21c:	86 e2       	ldi	r24, 0x26	; 38
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	0e 94 c9 0b 	call	0x1792	; 0x1792 <puts>
	printf("-------------------------------------------\n");
     224:	84 e5       	ldi	r24, 0x54	; 84
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	0e 94 c9 0b 	call	0x1792	; 0x1792 <puts>
	nrf24_read(CONFIG,&data,1);
     22c:	41 e0       	ldi	r20, 0x01	; 1
     22e:	50 e0       	ldi	r21, 0x00	; 0
     230:	be 01       	movw	r22, r28
     232:	6f 5f       	subi	r22, 0xFF	; 255
     234:	7f 4f       	sbci	r23, 0xFF	; 255
     236:	80 e0       	ldi	r24, 0x00	; 0
     238:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("CONFIG		0x%x\n",data);
     23c:	89 81       	ldd	r24, Y+1	; 0x01
     23e:	1f 92       	push	r1
     240:	8f 93       	push	r24
     242:	80 e8       	ldi	r24, 0x80	; 128
     244:	91 e0       	ldi	r25, 0x01	; 1
     246:	9f 93       	push	r25
     248:	8f 93       	push	r24
     24a:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(EN_AA,&data,1);
     24e:	41 e0       	ldi	r20, 0x01	; 1
     250:	50 e0       	ldi	r21, 0x00	; 0
     252:	be 01       	movw	r22, r28
     254:	6f 5f       	subi	r22, 0xFF	; 255
     256:	7f 4f       	sbci	r23, 0xFF	; 255
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("EN_AA			0x%x\n",data);
     25e:	89 81       	ldd	r24, Y+1	; 0x01
     260:	1f 92       	push	r1
     262:	8f 93       	push	r24
     264:	8e e8       	ldi	r24, 0x8E	; 142
     266:	91 e0       	ldi	r25, 0x01	; 1
     268:	9f 93       	push	r25
     26a:	8f 93       	push	r24
     26c:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(EN_RXADDR,&data,1);
     270:	41 e0       	ldi	r20, 0x01	; 1
     272:	50 e0       	ldi	r21, 0x00	; 0
     274:	be 01       	movw	r22, r28
     276:	6f 5f       	subi	r22, 0xFF	; 255
     278:	7f 4f       	sbci	r23, 0xFF	; 255
     27a:	82 e0       	ldi	r24, 0x02	; 2
     27c:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
     280:	89 81       	ldd	r24, Y+1	; 0x01
     282:	1f 92       	push	r1
     284:	8f 93       	push	r24
     286:	8c e9       	ldi	r24, 0x9C	; 156
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	9f 93       	push	r25
     28c:	8f 93       	push	r24
     28e:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(SETUP_RETR,&data,1);
     292:	41 e0       	ldi	r20, 0x01	; 1
     294:	50 e0       	ldi	r21, 0x00	; 0
     296:	be 01       	movw	r22, r28
     298:	6f 5f       	subi	r22, 0xFF	; 255
     29a:	7f 4f       	sbci	r23, 0xFF	; 255
     29c:	84 e0       	ldi	r24, 0x04	; 4
     29e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
     2a2:	89 81       	ldd	r24, Y+1	; 0x01
     2a4:	1f 92       	push	r1
     2a6:	8f 93       	push	r24
     2a8:	8d ea       	ldi	r24, 0xAD	; 173
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(RF_CH,&data,1);
     2b4:	41 e0       	ldi	r20, 0x01	; 1
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	be 01       	movw	r22, r28
     2ba:	6f 5f       	subi	r22, 0xFF	; 255
     2bc:	7f 4f       	sbci	r23, 0xFF	; 255
     2be:	85 e0       	ldi	r24, 0x05	; 5
     2c0:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("RF_CH			0x%x\n",data);
     2c4:	89 81       	ldd	r24, Y+1	; 0x01
     2c6:	1f 92       	push	r1
     2c8:	8f 93       	push	r24
     2ca:	8f eb       	ldi	r24, 0xBF	; 191
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	9f 93       	push	r25
     2d0:	8f 93       	push	r24
     2d2:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(RF_SETUP,&data,1);
     2d6:	41 e0       	ldi	r20, 0x01	; 1
     2d8:	50 e0       	ldi	r21, 0x00	; 0
     2da:	be 01       	movw	r22, r28
     2dc:	6f 5f       	subi	r22, 0xFF	; 255
     2de:	7f 4f       	sbci	r23, 0xFF	; 255
     2e0:	86 e0       	ldi	r24, 0x06	; 6
     2e2:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
     2e6:	89 81       	ldd	r24, Y+1	; 0x01
     2e8:	1f 92       	push	r1
     2ea:	8f 93       	push	r24
     2ec:	8d ec       	ldi	r24, 0xCD	; 205
     2ee:	91 e0       	ldi	r25, 0x01	; 1
     2f0:	9f 93       	push	r25
     2f2:	8f 93       	push	r24
     2f4:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(STATUS,&data,1);
     2f8:	41 e0       	ldi	r20, 0x01	; 1
     2fa:	50 e0       	ldi	r21, 0x00	; 0
     2fc:	be 01       	movw	r22, r28
     2fe:	6f 5f       	subi	r22, 0xFF	; 255
     300:	7f 4f       	sbci	r23, 0xFF	; 255
     302:	87 e0       	ldi	r24, 0x07	; 7
     304:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("STATUS		0x%x\n",data);
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	1f 92       	push	r1
     30c:	8f 93       	push	r24
     30e:	8d ed       	ldi	r24, 0xDD	; 221
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	9f 93       	push	r25
     314:	8f 93       	push	r24
     316:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	nrf24_read(FEATURE,&data,1);
     31a:	41 e0       	ldi	r20, 0x01	; 1
     31c:	50 e0       	ldi	r21, 0x00	; 0
     31e:	be 01       	movw	r22, r28
     320:	6f 5f       	subi	r22, 0xFF	; 255
     322:	7f 4f       	sbci	r23, 0xFF	; 255
     324:	8d e1       	ldi	r24, 0x1D	; 29
     326:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	printf("FEATURE		0x%x\n",data);
     32a:	89 81       	ldd	r24, Y+1	; 0x01
     32c:	1f 92       	push	r1
     32e:	8f 93       	push	r24
     330:	8b ee       	ldi	r24, 0xEB	; 235
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	9f 93       	push	r25
     336:	8f 93       	push	r24
     338:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
	printf("-------------------------------------------\n\n");
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	8a ef       	ldi	r24, 0xFA	; 250
     348:	91 e0       	ldi	r25, 0x01	; 1
     34a:	0e 94 c9 0b 	call	0x1792	; 0x1792 <puts>
}
     34e:	0f 90       	pop	r0
     350:	df 91       	pop	r29
     352:	cf 91       	pop	r28
     354:	08 95       	ret

00000356 <adc_init>:

void adc_init(void) {
	ADMUX = (0<<REFS1)|(1<<REFS0)|			// Reference Selection Bits, AVcc - External cap at AREF
     356:	85 e4       	ldi	r24, 0x45	; 69
     358:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR)|								// ADC Left Adjust Result
	(0<<MUX3)|(1<<MUX2)|(0<<MUX1)|(1<<MUX0);// Analog Channel Selection Bits 'ADC5' (PC5)
	
	ADCSRA = (1<<ADEN)|						// ADC Enable
     35c:	85 e8       	ldi	r24, 0x85	; 133
     35e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     362:	08 95       	ret

00000364 <read_adc>:
	(0<<ADIF)|								// ADC Interrupt Flag
	(0<<ADIE)|								// ADC Interrupt Enable
	(1<<ADPS2)|(0<<ADPS1)|(1<<ADPS0);		// ADC Prescaler Select Bits '32'
}

void read_adc(void) {
     364:	bf 92       	push	r11
     366:	cf 92       	push	r12
     368:	df 92       	push	r13
     36a:	ef 92       	push	r14
     36c:	ff 92       	push	r15
     36e:	0f 93       	push	r16
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
	unsigned char i = 4;				// Set 'i' for iterations
	adc_temp = 0;						// set float 'adc_temp'
     376:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <adc_temp>
     37a:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <adc_temp+0x1>
     37e:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <adc_temp+0x2>
     382:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <adc_temp+0x3>
     386:	68 94       	set
     388:	bb 24       	eor	r11, r11
     38a:	b2 f8       	bld	r11, 2
	while (i--) {						// Decrement 'i' until 4 samples take
		ADCSRA |= (1<<ADSC);			// If ADSC is high (ADC Start Conversion)...
     38c:	ca e7       	ldi	r28, 0x7A	; 122
     38e:	d0 e0       	ldi	r29, 0x00	; 0
		while (ADCSRA & (1<<ADSC));		// Start the ADC Conversion
		adc_temp += ADC;				// Store the analog value on of current adc_temp
     390:	08 e7       	ldi	r16, 0x78	; 120
     392:	10 e0       	ldi	r17, 0x00	; 0

void read_adc(void) {
	unsigned char i = 4;				// Set 'i' for iterations
	adc_temp = 0;						// set float 'adc_temp'
	while (i--) {						// Decrement 'i' until 4 samples take
		ADCSRA |= (1<<ADSC);			// If ADSC is high (ADC Start Conversion)...
     394:	88 81       	ld	r24, Y
     396:	80 64       	ori	r24, 0x40	; 64
     398:	88 83       	st	Y, r24
		while (ADCSRA & (1<<ADSC));		// Start the ADC Conversion
     39a:	88 81       	ld	r24, Y
     39c:	86 fd       	sbrc	r24, 6
     39e:	fd cf       	rjmp	.-6      	; 0x39a <read_adc+0x36>
		adc_temp += ADC;				// Store the analog value on of current adc_temp
     3a0:	f8 01       	movw	r30, r16
     3a2:	60 81       	ld	r22, Z
     3a4:	71 81       	ldd	r23, Z+1	; 0x01
     3a6:	c0 90 c2 02 	lds	r12, 0x02C2	; 0x8002c2 <adc_temp>
     3aa:	d0 90 c3 02 	lds	r13, 0x02C3	; 0x8002c3 <adc_temp+0x1>
     3ae:	e0 90 c4 02 	lds	r14, 0x02C4	; 0x8002c4 <adc_temp+0x2>
     3b2:	f0 90 c5 02 	lds	r15, 0x02C5	; 0x8002c5 <adc_temp+0x3>
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 d3 05 	call	0xba6	; 0xba6 <__floatunsisf>
     3be:	a7 01       	movw	r20, r14
     3c0:	96 01       	movw	r18, r12
     3c2:	0e 94 67 05 	call	0xace	; 0xace <__addsf3>
     3c6:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <adc_temp>
     3ca:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <adc_temp+0x1>
     3ce:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <adc_temp+0x2>
     3d2:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <adc_temp+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3d6:	ff ef       	ldi	r31, 0xFF	; 255
     3d8:	20 e7       	ldi	r18, 0x70	; 112
     3da:	82 e0       	ldi	r24, 0x02	; 2
     3dc:	f1 50       	subi	r31, 0x01	; 1
     3de:	20 40       	sbci	r18, 0x00	; 0
     3e0:	80 40       	sbci	r24, 0x00	; 0
     3e2:	e1 f7       	brne	.-8      	; 0x3dc <read_adc+0x78>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <read_adc+0x82>
     3e6:	00 00       	nop
     3e8:	ba 94       	dec	r11
}

void read_adc(void) {
	unsigned char i = 4;				// Set 'i' for iterations
	adc_temp = 0;						// set float 'adc_temp'
	while (i--) {						// Decrement 'i' until 4 samples take
     3ea:	b1 10       	cpse	r11, r1
     3ec:	d3 cf       	rjmp	.-90     	; 0x394 <read_adc+0x30>
		ADCSRA |= (1<<ADSC);			// If ADSC is high (ADC Start Conversion)...
		while (ADCSRA & (1<<ADSC));		// Start the ADC Conversion
		adc_temp += ADC;				// Store the analog value on of current adc_temp
		_delay_ms(50);					// delay 50ms for sampling
	}
	adc_temp = (adc_temp/4);			// Average of 4 samples taken into adc_temp
     3ee:	60 91 c2 02 	lds	r22, 0x02C2	; 0x8002c2 <adc_temp>
     3f2:	70 91 c3 02 	lds	r23, 0x02C3	; 0x8002c3 <adc_temp+0x1>
     3f6:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <adc_temp+0x2>
     3fa:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <adc_temp+0x3>
     3fe:	20 e0       	ldi	r18, 0x00	; 0
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	40 e8       	ldi	r20, 0x80	; 128
     404:	5e e3       	ldi	r21, 0x3E	; 62
     406:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__mulsf3>
     40a:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <adc_temp>
     40e:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <adc_temp+0x1>
     412:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <adc_temp+0x2>
     416:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <adc_temp+0x3>
}
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	df 90       	pop	r13
     428:	cf 90       	pop	r12
     42a:	bf 90       	pop	r11
     42c:	08 95       	ret

0000042e <USART_send>:

void USART_send(unsigned char data) {			// Function to transmit ASCII value into UDR0
	while (!(UCSR0A & (1 << UDRE0)));			// Keep Checking until  UDRE0 data register 'High' to break loop
     42e:	e0 ec       	ldi	r30, 0xC0	; 192
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	90 81       	ld	r25, Z
     434:	95 ff       	sbrs	r25, 5
     436:	fd cf       	rjmp	.-6      	; 0x432 <USART_send+0x4>
	UDR0 = data;								// Store unsigned char serial data into UDR0
     438:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     43c:	08 95       	ret

0000043e <USART_putstring>:
}

void USART_putstring(char* StringPtr) {			// Function to break string into chars, then USART_send()
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
     442:	ec 01       	movw	r28, r24
	while (*StringPtr != 0x00) {				// Keep Looping until String Completed (null/0-bits)
     444:	88 81       	ld	r24, Y
     446:	88 23       	and	r24, r24
     448:	31 f0       	breq	.+12     	; 0x456 <USART_putstring+0x18>
     44a:	21 96       	adiw	r28, 0x01	; 1
		USART_send(*StringPtr);					// Send the unsigned char value pointed by the string pointer
     44c:	0e 94 17 02 	call	0x42e	; 0x42e <USART_send>
	while (!(UCSR0A & (1 << UDRE0)));			// Keep Checking until  UDRE0 data register 'High' to break loop
	UDR0 = data;								// Store unsigned char serial data into UDR0
}

void USART_putstring(char* StringPtr) {			// Function to break string into chars, then USART_send()
	while (*StringPtr != 0x00) {				// Keep Looping until String Completed (null/0-bits)
     450:	89 91       	ld	r24, Y+
     452:	81 11       	cpse	r24, r1
     454:	fb cf       	rjmp	.-10     	; 0x44c <USART_putstring+0xe>
		USART_send(*StringPtr);					// Send the unsigned char value pointed by the string pointer
		StringPtr++;							// Increment pointer to next char array location
	}
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	08 95       	ret

0000045c <main>:

//	Used in IRQ ISR
volatile bool message_received = false;
volatile bool status = false;

int main(void) {
     45c:	cf 93       	push	r28
     45e:	df 93       	push	r29
     460:	cd b7       	in	r28, 0x3d	; 61
     462:	de b7       	in	r29, 0x3e	; 62
     464:	a0 97       	sbiw	r28, 0x20	; 32
     466:	0f b6       	in	r0, 0x3f	; 63
     468:	f8 94       	cli
     46a:	de bf       	out	0x3e, r29	; 62
     46c:	0f be       	out	0x3f, r0	; 63
     46e:	cd bf       	out	0x3d, r28	; 61
	
	//	Set cliche message to send (message cannot exceed 32 characters)
	char tx_message[32];				// Define string array
	strcpy(tx_message,"Hello World!");	// Copy string into array
     470:	8d e0       	ldi	r24, 0x0D	; 13
     472:	e7 e2       	ldi	r30, 0x27	; 39
     474:	f2 e0       	ldi	r31, 0x02	; 2
     476:	de 01       	movw	r26, r28
     478:	11 96       	adiw	r26, 0x01	; 1
     47a:	01 90       	ld	r0, Z+
     47c:	0d 92       	st	X+, r0
     47e:	8a 95       	dec	r24
     480:	e1 f7       	brne	.-8      	; 0x47a <main+0x1e>
	
	//	Initialize UART
	uart_init();
     482:	0e 94 53 05 	call	0xaa6	; 0xaa6 <uart_init>
	adc_init();
     486:	0e 94 ab 01 	call	0x356	; 0x356 <adc_init>
	float adc_tempf;

	//	Initialize nRF24L01+ and print configuration info
	nrf24_init();
     48a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <nrf24_init>
	print_config();
     48e:	0e 94 09 01 	call	0x212	; 0x212 <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
     492:	0e 94 23 04 	call	0x846	; 0x846 <nrf24_start_listening>
	status = nrf24_send_message(tx_message);
     496:	ce 01       	movw	r24, r28
     498:	01 96       	adiw	r24, 0x01	; 1
     49a:	0e 94 2e 04 	call	0x85c	; 0x85c <nrf24_send_message>
     49e:	91 e0       	ldi	r25, 0x01	; 1
     4a0:	81 11       	cpse	r24, r1
     4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <main+0x4a>
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <__data_end>
	if (status == true) printf("Message sent successfully\n");
     4aa:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <__data_end>
     4ae:	88 23       	and	r24, r24
     4b0:	21 f0       	breq	.+8      	; 0x4ba <main+0x5e>
     4b2:	84 e3       	ldi	r24, 0x34	; 52
     4b4:	92 e0       	ldi	r25, 0x02	; 2
     4b6:	0e 94 c9 0b 	call	0x1792	; 0x1792 <puts>
	
	while (1) {
		
		status = nrf24_send_message(tx_message);
     4ba:	41 2c       	mov	r4, r1
		
		if (message_received) {
			
			//	Message received, print it
			message_received = false;
			printf("Received message from geo: %s\n",nrf24_read_message());
     4bc:	0f 2e       	mov	r0, r31
     4be:	fe e4       	ldi	r31, 0x4E	; 78
     4c0:	cf 2e       	mov	r12, r31
     4c2:	f2 e0       	ldi	r31, 0x02	; 2
     4c4:	df 2e       	mov	r13, r31
     4c6:	f0 2d       	mov	r31, r0
			//	Send message as response
			_delay_ms(500);
			
			read_adc();
			adc_tempf = (ADCH << 8) + ADCL;					// Let 'T(C) = Vout/10mV' and 'TOS = ADC - T(C)'
     4c8:	0f 2e       	mov	r0, r31
     4ca:	f9 e7       	ldi	r31, 0x79	; 121
     4cc:	8f 2e       	mov	r8, r31
     4ce:	91 2c       	mov	r9, r1
     4d0:	f0 2d       	mov	r31, r0
     4d2:	0f 2e       	mov	r0, r31
     4d4:	f8 e7       	ldi	r31, 0x78	; 120
     4d6:	af 2e       	mov	r10, r31
     4d8:	b1 2c       	mov	r11, r1
     4da:	f0 2d       	mov	r31, r0
	status = nrf24_send_message(tx_message);
	if (status == true) printf("Message sent successfully\n");
	
	while (1) {
		
		status = nrf24_send_message(tx_message);
     4dc:	77 24       	eor	r7, r7
     4de:	73 94       	inc	r7
     4e0:	64 2c       	mov	r6, r4
			_delay_ms(500);
			
			read_adc();
			adc_tempf = (ADCH << 8) + ADCL;					// Let 'T(C) = Vout/10mV' and 'TOS = ADC - T(C)'
			adc_tempf = (9/5)*adc_tempf + 32;				// Converts Celsius to Fahrenheit
			snprintf(outs,sizeof(outs),"%3f\r\n", adc_tempf);// Stores integer 'adc_temp' into the string 'outs'
     4e2:	0f 2e       	mov	r0, r31
     4e4:	fd e6       	ldi	r31, 0x6D	; 109
     4e6:	ef 2e       	mov	r14, r31
     4e8:	f2 e0       	ldi	r31, 0x02	; 2
     4ea:	ff 2e       	mov	r15, r31
     4ec:	f0 2d       	mov	r31, r0
     4ee:	0f 2e       	mov	r0, r31
     4f0:	f4 e1       	ldi	r31, 0x14	; 20
     4f2:	5f 2e       	mov	r5, r31
     4f4:	f0 2d       	mov	r31, r0
     4f6:	0e ea       	ldi	r16, 0xAE	; 174
     4f8:	12 e0       	ldi	r17, 0x02	; 2
	status = nrf24_send_message(tx_message);
	if (status == true) printf("Message sent successfully\n");
	
	while (1) {
		
		status = nrf24_send_message(tx_message);
     4fa:	ce 01       	movw	r24, r28
     4fc:	01 96       	adiw	r24, 0x01	; 1
     4fe:	0e 94 2e 04 	call	0x85c	; 0x85c <nrf24_send_message>
     502:	97 2d       	mov	r25, r7
     504:	81 11       	cpse	r24, r1
     506:	01 c0       	rjmp	.+2      	; 0x50a <main+0xae>
     508:	96 2d       	mov	r25, r6
     50a:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <__data_end>
		
		if (message_received) {
     50e:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <message_received>
     512:	88 23       	and	r24, r24
     514:	91 f3       	breq	.-28     	; 0x4fa <main+0x9e>
			
			//	Message received, print it
			message_received = false;
     516:	40 92 8d 02 	sts	0x028D, r4	; 0x80028d <message_received>
			printf("Received message from geo: %s\n",nrf24_read_message());
     51a:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <nrf24_read_message>
     51e:	9f 93       	push	r25
     520:	8f 93       	push	r24
     522:	df 92       	push	r13
     524:	cf 92       	push	r12
     526:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
     52a:	2f ef       	ldi	r18, 0xFF	; 255
     52c:	39 e6       	ldi	r19, 0x69	; 105
     52e:	88 e1       	ldi	r24, 0x18	; 24
     530:	21 50       	subi	r18, 0x01	; 1
     532:	30 40       	sbci	r19, 0x00	; 0
     534:	80 40       	sbci	r24, 0x00	; 0
     536:	e1 f7       	brne	.-8      	; 0x530 <main+0xd4>
     538:	00 c0       	rjmp	.+0      	; 0x53a <main+0xde>
     53a:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			
			read_adc();
     53c:	0e 94 b2 01 	call	0x364	; 0x364 <read_adc>
			adc_tempf = (ADCH << 8) + ADCL;					// Let 'T(C) = Vout/10mV' and 'TOS = ADC - T(C)'
     540:	f4 01       	movw	r30, r8
     542:	60 81       	ld	r22, Z
     544:	f5 01       	movw	r30, r10
     546:	80 81       	ld	r24, Z
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	76 2f       	mov	r23, r22
     54c:	66 27       	eor	r22, r22
     54e:	68 0f       	add	r22, r24
     550:	71 1d       	adc	r23, r1
     552:	07 2e       	mov	r0, r23
     554:	00 0c       	add	r0, r0
     556:	88 0b       	sbc	r24, r24
     558:	99 0b       	sbc	r25, r25
     55a:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__floatsisf>
			adc_tempf = (9/5)*adc_tempf + 32;				// Converts Celsius to Fahrenheit
			snprintf(outs,sizeof(outs),"%3f\r\n", adc_tempf);// Stores integer 'adc_temp' into the string 'outs'
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e0       	ldi	r20, 0x00	; 0
     564:	52 e4       	ldi	r21, 0x42	; 66
     566:	0e 94 67 05 	call	0xace	; 0xace <__addsf3>
     56a:	9f 93       	push	r25
     56c:	8f 93       	push	r24
     56e:	7f 93       	push	r23
     570:	6f 93       	push	r22
     572:	ff 92       	push	r15
     574:	ef 92       	push	r14
     576:	1f 92       	push	r1
     578:	5f 92       	push	r5
     57a:	1f 93       	push	r17
     57c:	0f 93       	push	r16
     57e:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <snprintf>
			USART_putstring(outs);
     582:	c8 01       	movw	r24, r16
     584:	0e 94 1f 02 	call	0x43e	; 0x43e <USART_putstring>
			
			if (status == true) printf("Message sent successfully\n");
     588:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <__data_end>
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	88 23       	and	r24, r24
     598:	09 f4       	brne	.+2      	; 0x59c <main+0x140>
     59a:	af cf       	rjmp	.-162    	; 0x4fa <main+0x9e>
     59c:	84 e3       	ldi	r24, 0x34	; 52
     59e:	92 e0       	ldi	r25, 0x02	; 2
     5a0:	0e 94 c9 0b 	call	0x1792	; 0x1792 <puts>
     5a4:	9e cf       	rjmp	.-196    	; 0x4e2 <main+0x86>

000005a6 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
     5a6:	df 92       	push	r13
     5a8:	ef 92       	push	r14
     5aa:	ff 92       	push	r15
     5ac:	0f 93       	push	r16
     5ae:	1f 93       	push	r17
     5b0:	cf 93       	push	r28
     5b2:	df 93       	push	r29
     5b4:	7b 01       	movw	r14, r22
     5b6:	8a 01       	movw	r16, r20
     5b8:	2a 98       	cbi	0x05, 2	; 5
     5ba:	0e 94 32 05 	call	0xa64	; 0xa64 <spi_exchange>
     5be:	d8 2e       	mov	r13, r24
     5c0:	01 15       	cp	r16, r1
     5c2:	11 05       	cpc	r17, r1
     5c4:	51 f0       	breq	.+20     	; 0x5da <nrf24_send_spi+0x34>
     5c6:	e7 01       	movw	r28, r14
     5c8:	0e 0d       	add	r16, r14
     5ca:	1f 1d       	adc	r17, r15
     5cc:	88 81       	ld	r24, Y
     5ce:	0e 94 32 05 	call	0xa64	; 0xa64 <spi_exchange>
     5d2:	89 93       	st	Y+, r24
     5d4:	c0 17       	cp	r28, r16
     5d6:	d1 07       	cpc	r29, r17
     5d8:	c9 f7       	brne	.-14     	; 0x5cc <nrf24_send_spi+0x26>
     5da:	2a 9a       	sbi	0x05, 2	; 5
     5dc:	8d 2d       	mov	r24, r13
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	1f 91       	pop	r17
     5e4:	0f 91       	pop	r16
     5e6:	ff 90       	pop	r15
     5e8:	ef 90       	pop	r14
     5ea:	df 90       	pop	r13
     5ec:	08 95       	ret

000005ee <nrf24_write>:
     5ee:	80 62       	ori	r24, 0x20	; 32
     5f0:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <nrf24_send_spi>
     5f4:	08 95       	ret

000005f6 <nrf24_read>:
     5f6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <nrf24_send_spi>
     5fa:	08 95       	ret

000005fc <nrf24_init>:
     5fc:	0f 93       	push	r16
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	1f 92       	push	r1
     606:	cd b7       	in	r28, 0x3d	; 61
     608:	de b7       	in	r29, 0x3e	; 62
     60a:	f8 94       	cli
     60c:	e9 e6       	ldi	r30, 0x69	; 105
     60e:	f0 e0       	ldi	r31, 0x00	; 0
     610:	80 81       	ld	r24, Z
     612:	82 60       	ori	r24, 0x02	; 2
     614:	80 83       	st	Z, r24
     616:	e8 9a       	sbi	0x1d, 0	; 29
     618:	78 94       	sei
     61a:	21 9a       	sbi	0x04, 1	; 4
     61c:	22 9a       	sbi	0x04, 2	; 4
     61e:	2a 9a       	sbi	0x05, 2	; 5
     620:	29 98       	cbi	0x05, 1	; 5
     622:	0e 94 23 05 	call	0xa46	; 0xa46 <spi_master_init>
     626:	2f ef       	ldi	r18, 0xFF	; 255
     628:	81 ee       	ldi	r24, 0xE1	; 225
     62a:	94 e0       	ldi	r25, 0x04	; 4
     62c:	21 50       	subi	r18, 0x01	; 1
     62e:	80 40       	sbci	r24, 0x00	; 0
     630:	90 40       	sbci	r25, 0x00	; 0
     632:	e1 f7       	brne	.-8      	; 0x62c <nrf24_init+0x30>
     634:	00 c0       	rjmp	.+0      	; 0x636 <nrf24_init+0x3a>
     636:	00 00       	nop
     638:	0f e3       	ldi	r16, 0x3F	; 63
     63a:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <data>
     63e:	41 e0       	ldi	r20, 0x01	; 1
     640:	50 e0       	ldi	r21, 0x00	; 0
     642:	66 ec       	ldi	r22, 0xC6	; 198
     644:	72 e0       	ldi	r23, 0x02	; 2
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     64c:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <data>
     650:	41 e0       	ldi	r20, 0x01	; 1
     652:	50 e0       	ldi	r21, 0x00	; 0
     654:	66 ec       	ldi	r22, 0xC6	; 198
     656:	72 e0       	ldi	r23, 0x02	; 2
     658:	81 e0       	ldi	r24, 0x01	; 1
     65a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     65e:	80 ef       	ldi	r24, 0xF0	; 240
     660:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     664:	41 e0       	ldi	r20, 0x01	; 1
     666:	50 e0       	ldi	r21, 0x00	; 0
     668:	66 ec       	ldi	r22, 0xC6	; 198
     66a:	72 e0       	ldi	r23, 0x02	; 2
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     672:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <data>
     676:	41 e0       	ldi	r20, 0x01	; 1
     678:	50 e0       	ldi	r21, 0x00	; 0
     67a:	66 ec       	ldi	r22, 0xC6	; 198
     67c:	72 e0       	ldi	r23, 0x02	; 2
     67e:	82 e0       	ldi	r24, 0x02	; 2
     680:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     684:	84 e7       	ldi	r24, 0x74	; 116
     686:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     68a:	41 e0       	ldi	r20, 0x01	; 1
     68c:	50 e0       	ldi	r21, 0x00	; 0
     68e:	66 ec       	ldi	r22, 0xC6	; 198
     690:	72 e0       	ldi	r23, 0x02	; 2
     692:	85 e0       	ldi	r24, 0x05	; 5
     694:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     698:	8e e0       	ldi	r24, 0x0E	; 14
     69a:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     69e:	41 e0       	ldi	r20, 0x01	; 1
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	66 ec       	ldi	r22, 0xC6	; 198
     6a4:	72 e0       	ldi	r23, 0x02	; 2
     6a6:	86 e0       	ldi	r24, 0x06	; 6
     6a8:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     6ac:	10 e7       	ldi	r17, 0x70	; 112
     6ae:	10 93 c6 02 	sts	0x02C6, r17	; 0x8002c6 <data>
     6b2:	41 e0       	ldi	r20, 0x01	; 1
     6b4:	50 e0       	ldi	r21, 0x00	; 0
     6b6:	66 ec       	ldi	r22, 0xC6	; 198
     6b8:	72 e0       	ldi	r23, 0x02	; 2
     6ba:	87 e0       	ldi	r24, 0x07	; 7
     6bc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     6c0:	00 93 c6 02 	sts	0x02C6, r16	; 0x8002c6 <data>
     6c4:	41 e0       	ldi	r20, 0x01	; 1
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	66 ec       	ldi	r22, 0xC6	; 198
     6ca:	72 e0       	ldi	r23, 0x02	; 2
     6cc:	8c e1       	ldi	r24, 0x1C	; 28
     6ce:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     6d2:	84 e0       	ldi	r24, 0x04	; 4
     6d4:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     6d8:	41 e0       	ldi	r20, 0x01	; 1
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	66 ec       	ldi	r22, 0xC6	; 198
     6de:	72 e0       	ldi	r23, 0x02	; 2
     6e0:	8d e1       	ldi	r24, 0x1D	; 29
     6e2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     6e6:	19 83       	std	Y+1, r17	; 0x01
     6e8:	40 e0       	ldi	r20, 0x00	; 0
     6ea:	50 e0       	ldi	r21, 0x00	; 0
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	70 e0       	ldi	r23, 0x00	; 0
     6f0:	82 ee       	ldi	r24, 0xE2	; 226
     6f2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     6f6:	40 e0       	ldi	r20, 0x00	; 0
     6f8:	50 e0       	ldi	r21, 0x00	; 0
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	81 ee       	ldi	r24, 0xE1	; 225
     700:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     704:	45 e0       	ldi	r20, 0x05	; 5
     706:	50 e0       	ldi	r21, 0x00	; 0
     708:	65 e0       	ldi	r22, 0x05	; 5
     70a:	71 e0       	ldi	r23, 0x01	; 1
     70c:	8a e0       	ldi	r24, 0x0A	; 10
     70e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     712:	45 e0       	ldi	r20, 0x05	; 5
     714:	50 e0       	ldi	r21, 0x00	; 0
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	71 e0       	ldi	r23, 0x01	; 1
     71a:	80 e1       	ldi	r24, 0x10	; 16
     71c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     720:	41 e0       	ldi	r20, 0x01	; 1
     722:	50 e0       	ldi	r21, 0x00	; 0
     724:	be 01       	movw	r22, r28
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	82 e0       	ldi	r24, 0x02	; 2
     72c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     730:	89 81       	ldd	r24, Y+1	; 0x01
     732:	81 60       	ori	r24, 0x01	; 1
     734:	89 83       	std	Y+1, r24	; 0x01
     736:	41 e0       	ldi	r20, 0x01	; 1
     738:	50 e0       	ldi	r21, 0x00	; 0
     73a:	be 01       	movw	r22, r28
     73c:	6f 5f       	subi	r22, 0xFF	; 255
     73e:	7f 4f       	sbci	r23, 0xFF	; 255
     740:	82 e0       	ldi	r24, 0x02	; 2
     742:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     746:	0f 90       	pop	r0
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	08 95       	ret

00000752 <nrf24_state>:
     752:	1f 93       	push	r17
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	1f 92       	push	r1
     75a:	cd b7       	in	r28, 0x3d	; 61
     75c:	de b7       	in	r29, 0x3e	; 62
     75e:	18 2f       	mov	r17, r24
     760:	41 e0       	ldi	r20, 0x01	; 1
     762:	50 e0       	ldi	r21, 0x00	; 0
     764:	be 01       	movw	r22, r28
     766:	6f 5f       	subi	r22, 0xFF	; 255
     768:	7f 4f       	sbci	r23, 0xFF	; 255
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
     770:	13 30       	cpi	r17, 0x03	; 3
     772:	71 f1       	breq	.+92     	; 0x7d0 <nrf24_state+0x7e>
     774:	28 f4       	brcc	.+10     	; 0x780 <nrf24_state+0x2e>
     776:	11 30       	cpi	r17, 0x01	; 1
     778:	59 f0       	breq	.+22     	; 0x790 <nrf24_state+0x3e>
     77a:	12 30       	cpi	r17, 0x02	; 2
     77c:	e9 f0       	breq	.+58     	; 0x7b8 <nrf24_state+0x66>
     77e:	5e c0       	rjmp	.+188    	; 0x83c <nrf24_state+0xea>
     780:	15 30       	cpi	r17, 0x05	; 5
     782:	09 f4       	brne	.+2      	; 0x786 <nrf24_state+0x34>
     784:	47 c0       	rjmp	.+142    	; 0x814 <nrf24_state+0xc2>
     786:	d0 f1       	brcs	.+116    	; 0x7fc <nrf24_state+0xaa>
     788:	16 30       	cpi	r17, 0x06	; 6
     78a:	09 f4       	brne	.+2      	; 0x78e <nrf24_state+0x3c>
     78c:	45 c0       	rjmp	.+138    	; 0x818 <nrf24_state+0xc6>
     78e:	56 c0       	rjmp	.+172    	; 0x83c <nrf24_state+0xea>
     790:	89 81       	ldd	r24, Y+1	; 0x01
     792:	81 fd       	sbrc	r24, 1
     794:	53 c0       	rjmp	.+166    	; 0x83c <nrf24_state+0xea>
     796:	82 60       	ori	r24, 0x02	; 2
     798:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     79c:	41 e0       	ldi	r20, 0x01	; 1
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	66 ec       	ldi	r22, 0xC6	; 198
     7a2:	72 e0       	ldi	r23, 0x02	; 2
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     7aa:	8f e3       	ldi	r24, 0x3F	; 63
     7ac:	9f e1       	ldi	r25, 0x1F	; 31
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <nrf24_state+0x5c>
     7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <nrf24_state+0x62>
     7b4:	00 00       	nop
     7b6:	42 c0       	rjmp	.+132    	; 0x83c <nrf24_state+0xea>
     7b8:	89 81       	ldd	r24, Y+1	; 0x01
     7ba:	8d 7f       	andi	r24, 0xFD	; 253
     7bc:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     7c0:	41 e0       	ldi	r20, 0x01	; 1
     7c2:	50 e0       	ldi	r21, 0x00	; 0
     7c4:	66 ec       	ldi	r22, 0xC6	; 198
     7c6:	72 e0       	ldi	r23, 0x02	; 2
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     7ce:	36 c0       	rjmp	.+108    	; 0x83c <nrf24_state+0xea>
     7d0:	89 81       	ldd	r24, Y+1	; 0x01
     7d2:	81 60       	ori	r24, 0x01	; 1
     7d4:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     7d8:	41 e0       	ldi	r20, 0x01	; 1
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	66 ec       	ldi	r22, 0xC6	; 198
     7de:	72 e0       	ldi	r23, 0x02	; 2
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     7e6:	80 e7       	ldi	r24, 0x70	; 112
     7e8:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     7ec:	41 e0       	ldi	r20, 0x01	; 1
     7ee:	50 e0       	ldi	r21, 0x00	; 0
     7f0:	66 ec       	ldi	r22, 0xC6	; 198
     7f2:	72 e0       	ldi	r23, 0x02	; 2
     7f4:	87 e0       	ldi	r24, 0x07	; 7
     7f6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     7fa:	20 c0       	rjmp	.+64     	; 0x83c <nrf24_state+0xea>
     7fc:	89 81       	ldd	r24, Y+1	; 0x01
     7fe:	8e 7f       	andi	r24, 0xFE	; 254
     800:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     804:	41 e0       	ldi	r20, 0x01	; 1
     806:	50 e0       	ldi	r21, 0x00	; 0
     808:	66 ec       	ldi	r22, 0xC6	; 198
     80a:	72 e0       	ldi	r23, 0x02	; 2
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     812:	14 c0       	rjmp	.+40     	; 0x83c <nrf24_state+0xea>
     814:	29 98       	cbi	0x05, 1	; 5
     816:	12 c0       	rjmp	.+36     	; 0x83c <nrf24_state+0xea>
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	8e 7f       	andi	r24, 0xFE	; 254
     81c:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     820:	41 e0       	ldi	r20, 0x01	; 1
     822:	50 e0       	ldi	r21, 0x00	; 0
     824:	66 ec       	ldi	r22, 0xC6	; 198
     826:	72 e0       	ldi	r23, 0x02	; 2
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     82e:	29 9a       	sbi	0x05, 1	; 5
     830:	87 e5       	ldi	r24, 0x57	; 87
     832:	92 e0       	ldi	r25, 0x02	; 2
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <nrf24_state+0xe2>
     838:	00 c0       	rjmp	.+0      	; 0x83a <nrf24_state+0xe8>
     83a:	00 00       	nop
     83c:	0f 90       	pop	r0
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	1f 91       	pop	r17
     844:	08 95       	ret

00000846 <nrf24_start_listening>:
     846:	83 e0       	ldi	r24, 0x03	; 3
     848:	0e 94 a9 03 	call	0x752	; 0x752 <nrf24_state>
     84c:	29 9a       	sbi	0x05, 1	; 5
     84e:	87 e5       	ldi	r24, 0x57	; 87
     850:	92 e0       	ldi	r25, 0x02	; 2
     852:	01 97       	sbiw	r24, 0x01	; 1
     854:	f1 f7       	brne	.-4      	; 0x852 <nrf24_start_listening+0xc>
     856:	00 c0       	rjmp	.+0      	; 0x858 <nrf24_start_listening+0x12>
     858:	00 00       	nop
     85a:	08 95       	ret

0000085c <nrf24_send_message>:
     85c:	cf 92       	push	r12
     85e:	df 92       	push	r13
     860:	ef 92       	push	r14
     862:	ff 92       	push	r15
     864:	0f 93       	push	r16
     866:	1f 93       	push	r17
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	cd b7       	in	r28, 0x3d	; 61
     86e:	de b7       	in	r29, 0x3e	; 62
     870:	a0 97       	sbiw	r28, 0x20	; 32
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	f8 94       	cli
     876:	de bf       	out	0x3e, r29	; 62
     878:	0f be       	out	0x3f, r0	; 63
     87a:	cd bf       	out	0x3d, r28	; 61
     87c:	6c 01       	movw	r12, r24
     87e:	68 94       	set
     880:	ff 24       	eor	r15, r15
     882:	f5 f8       	bld	r15, 5
     884:	ce 01       	movw	r24, r28
     886:	01 96       	adiw	r24, 0x01	; 1
     888:	fc 01       	movw	r30, r24
     88a:	2f 2d       	mov	r18, r15
     88c:	11 92       	st	Z+, r1
     88e:	2a 95       	dec	r18
     890:	e9 f7       	brne	.-6      	; 0x88c <nrf24_send_message+0x30>
     892:	b6 01       	movw	r22, r12
     894:	0e 94 65 0b 	call	0x16ca	; 0x16ca <strcpy>
     898:	f6 01       	movw	r30, r12
     89a:	01 90       	ld	r0, Z+
     89c:	00 20       	and	r0, r0
     89e:	e9 f7       	brne	.-6      	; 0x89a <nrf24_send_message+0x3e>
     8a0:	31 97       	sbiw	r30, 0x01	; 1
     8a2:	8f 01       	movw	r16, r30
     8a4:	0c 19       	sub	r16, r12
     8a6:	1d 09       	sbc	r17, r13
     8a8:	84 e0       	ldi	r24, 0x04	; 4
     8aa:	0e 94 a9 03 	call	0x752	; 0x752 <nrf24_state>
     8ae:	40 e0       	ldi	r20, 0x00	; 0
     8b0:	50 e0       	ldi	r21, 0x00	; 0
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	82 ee       	ldi	r24, 0xE2	; 226
     8b8:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	81 ee       	ldi	r24, 0xE1	; 225
     8c6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     8ca:	f0 92 c6 02 	sts	0x02C6, r15	; 0x8002c6 <data>
     8ce:	41 e0       	ldi	r20, 0x01	; 1
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	66 ec       	ldi	r22, 0xC6	; 198
     8d4:	72 e0       	ldi	r23, 0x02	; 2
     8d6:	87 e0       	ldi	r24, 0x07	; 7
     8d8:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     8dc:	41 e0       	ldi	r20, 0x01	; 1
     8de:	50 e0       	ldi	r21, 0x00	; 0
     8e0:	66 ec       	ldi	r22, 0xC6	; 198
     8e2:	72 e0       	ldi	r23, 0x02	; 2
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
     8ea:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
     8ee:	80 64       	ori	r24, 0x40	; 64
     8f0:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     8f4:	41 e0       	ldi	r20, 0x01	; 1
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	66 ec       	ldi	r22, 0xC6	; 198
     8fa:	72 e0       	ldi	r23, 0x02	; 2
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     902:	2a 98       	cbi	0x05, 2	; 5
     904:	80 eb       	ldi	r24, 0xB0	; 176
     906:	0e 94 2d 05 	call	0xa5a	; 0xa5a <spi_send>
     90a:	ef ef       	ldi	r30, 0xFF	; 255
     90c:	e0 0f       	add	r30, r16
     90e:	00 23       	and	r16, r16
     910:	81 f0       	breq	.+32     	; 0x932 <__stack+0x33>
     912:	86 01       	movw	r16, r12
     914:	ee 2e       	mov	r14, r30
     916:	f1 2c       	mov	r15, r1
     918:	f7 01       	movw	r30, r14
     91a:	31 96       	adiw	r30, 0x01	; 1
     91c:	76 01       	movw	r14, r12
     91e:	ee 0e       	add	r14, r30
     920:	ff 1e       	adc	r15, r31
     922:	f8 01       	movw	r30, r16
     924:	81 91       	ld	r24, Z+
     926:	8f 01       	movw	r16, r30
     928:	0e 94 2d 05 	call	0xa5a	; 0xa5a <spi_send>
     92c:	0e 15       	cp	r16, r14
     92e:	1f 05       	cpc	r17, r15
     930:	c1 f7       	brne	.-16     	; 0x922 <__stack+0x23>
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	0e 94 2d 05 	call	0xa5a	; 0xa5a <spi_send>
     938:	2a 9a       	sbi	0x05, 2	; 5
     93a:	29 9a       	sbi	0x05, 1	; 5
     93c:	f0 e5       	ldi	r31, 0x50	; 80
     93e:	fa 95       	dec	r31
     940:	f1 f7       	brne	.-4      	; 0x93e <__stack+0x3f>
     942:	29 98       	cbi	0x05, 1	; 5
     944:	41 e0       	ldi	r20, 0x01	; 1
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	66 ec       	ldi	r22, 0xC6	; 198
     94a:	72 e0       	ldi	r23, 0x02	; 2
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
     952:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
     956:	85 fd       	sbrc	r24, 5
     958:	0b c0       	rjmp	.+22     	; 0x970 <__stack+0x71>
     95a:	41 e0       	ldi	r20, 0x01	; 1
     95c:	50 e0       	ldi	r21, 0x00	; 0
     95e:	66 ec       	ldi	r22, 0xC6	; 198
     960:	72 e0       	ldi	r23, 0x02	; 2
     962:	87 e0       	ldi	r24, 0x07	; 7
     964:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
     968:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
     96c:	85 ff       	sbrs	r24, 5
     96e:	f5 cf       	rjmp	.-22     	; 0x95a <__stack+0x5b>
     970:	ce 01       	movw	r24, r28
     972:	01 96       	adiw	r24, 0x01	; 1
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	83 e7       	ldi	r24, 0x73	; 115
     97a:	92 e0       	ldi	r25, 0x02	; 2
     97c:	9f 93       	push	r25
     97e:	8f 93       	push	r24
     980:	0e 94 b3 0b 	call	0x1766	; 0x1766 <printf>
     984:	41 e0       	ldi	r20, 0x01	; 1
     986:	50 e0       	ldi	r21, 0x00	; 0
     988:	66 ec       	ldi	r22, 0xC6	; 198
     98a:	72 e0       	ldi	r23, 0x02	; 2
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
     992:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <data>
     996:	8f 7b       	andi	r24, 0xBF	; 191
     998:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
     99c:	41 e0       	ldi	r20, 0x01	; 1
     99e:	50 e0       	ldi	r21, 0x00	; 0
     9a0:	66 ec       	ldi	r22, 0xC6	; 198
     9a2:	72 e0       	ldi	r23, 0x02	; 2
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
     9aa:	0e 94 23 04 	call	0x846	; 0x846 <nrf24_start_listening>
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	81 e0       	ldi	r24, 0x01	; 1
     9b8:	a0 96       	adiw	r28, 0x20	; 32
     9ba:	0f b6       	in	r0, 0x3f	; 63
     9bc:	f8 94       	cli
     9be:	de bf       	out	0x3e, r29	; 62
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	cd bf       	out	0x3d, r28	; 61
     9c4:	df 91       	pop	r29
     9c6:	cf 91       	pop	r28
     9c8:	1f 91       	pop	r17
     9ca:	0f 91       	pop	r16
     9cc:	ff 90       	pop	r15
     9ce:	ef 90       	pop	r14
     9d0:	df 90       	pop	r13
     9d2:	cf 90       	pop	r12
     9d4:	08 95       	ret

000009d6 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
     9d6:	80 e2       	ldi	r24, 0x20	; 32
     9d8:	ee e8       	ldi	r30, 0x8E	; 142
     9da:	f2 e0       	ldi	r31, 0x02	; 2
     9dc:	df 01       	movw	r26, r30
     9de:	1d 92       	st	X+, r1
     9e0:	8a 95       	dec	r24
     9e2:	e9 f7       	brne	.-6      	; 0x9de <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
     9e4:	41 e0       	ldi	r20, 0x01	; 1
     9e6:	50 e0       	ldi	r21, 0x00	; 0
     9e8:	66 ec       	ldi	r22, 0xC6	; 198
     9ea:	72 e0       	ldi	r23, 0x02	; 2
     9ec:	80 e6       	ldi	r24, 0x60	; 96
     9ee:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
     9f2:	40 91 c6 02 	lds	r20, 0x02C6	; 0x8002c6 <data>
     9f6:	44 23       	and	r20, r20
     9f8:	41 f0       	breq	.+16     	; 0xa0a <nrf24_read_message+0x34>
     9fa:	50 e0       	ldi	r21, 0x00	; 0
     9fc:	4f 5f       	subi	r20, 0xFF	; 255
     9fe:	5f 4f       	sbci	r21, 0xFF	; 255
     a00:	6e e8       	ldi	r22, 0x8E	; 142
     a02:	72 e0       	ldi	r23, 0x02	; 2
     a04:	81 e6       	ldi	r24, 0x61	; 97
     a06:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
     a0a:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <rx_message.2167>
     a0e:	88 23       	and	r24, r24
     a10:	69 f0       	breq	.+26     	; 0xa2c <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
     a12:	80 e4       	ldi	r24, 0x40	; 64
     a14:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
		nrf24_write(STATUS,&data,1);
     a18:	41 e0       	ldi	r20, 0x01	; 1
     a1a:	50 e0       	ldi	r21, 0x00	; 0
     a1c:	66 ec       	ldi	r22, 0xC6	; 198
     a1e:	72 e0       	ldi	r23, 0x02	; 2
     a20:	87 e0       	ldi	r24, 0x07	; 7
     a22:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
		
		return rx_message;
     a26:	8e e8       	ldi	r24, 0x8E	; 142
     a28:	92 e0       	ldi	r25, 0x02	; 2
     a2a:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
     a2c:	80 e4       	ldi	r24, 0x40	; 64
     a2e:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <data>
	nrf24_write(STATUS,&data,1);
     a32:	41 e0       	ldi	r20, 0x01	; 1
     a34:	50 e0       	ldi	r21, 0x00	; 0
     a36:	66 ec       	ldi	r22, 0xC6	; 198
     a38:	72 e0       	ldi	r23, 0x02	; 2
     a3a:	87 e0       	ldi	r24, 0x07	; 7
     a3c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <nrf24_write>
	
	return "failed";
     a40:	85 e8       	ldi	r24, 0x85	; 133
     a42:	92 e0       	ldi	r25, 0x02	; 2
}
     a44:	08 95       	ret

00000a46 <spi_master_init>:
	loop_until_bit_is_set(SPSR0, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
     a46:	24 98       	cbi	0x04, 4	; 4
     a48:	84 b1       	in	r24, 0x04	; 4
     a4a:	88 62       	ori	r24, 0x28	; 40
     a4c:	84 b9       	out	0x04, r24	; 4
     a4e:	80 e5       	ldi	r24, 0x50	; 80
     a50:	8c bd       	out	0x2c, r24	; 44
     a52:	8d b5       	in	r24, 0x2d	; 45
     a54:	81 60       	ori	r24, 0x01	; 1
     a56:	8d bd       	out	0x2d, r24	; 45
     a58:	08 95       	ret

00000a5a <spi_send>:
     a5a:	8e bd       	out	0x2e, r24	; 46
     a5c:	0d b4       	in	r0, 0x2d	; 45
     a5e:	07 fe       	sbrs	r0, 7
     a60:	fd cf       	rjmp	.-6      	; 0xa5c <spi_send+0x2>
     a62:	08 95       	ret

00000a64 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR0 = send_data;
     a64:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR0, SPIF);
     a66:	0d b4       	in	r0, 0x2d	; 45
     a68:	07 fe       	sbrs	r0, 7
     a6a:	fd cf       	rjmp	.-6      	; 0xa66 <spi_exchange+0x2>
	return SPDR0;
     a6c:	8e b5       	in	r24, 0x2e	; 46
}
     a6e:	08 95       	ret

00000a70 <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
     a70:	cf 93       	push	r28
     a72:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     a74:	8a 30       	cpi	r24, 0x0A	; 10
     a76:	19 f4       	brne	.+6      	; 0xa7e <uart_putchar+0xe>
		uart_putchar('\r', stream);
     a78:	8d e0       	ldi	r24, 0x0D	; 13
     a7a:	0e 94 38 05 	call	0xa70	; 0xa70 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     a7e:	e0 ec       	ldi	r30, 0xC0	; 192
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	80 81       	ld	r24, Z
     a84:	85 ff       	sbrs	r24, 5
     a86:	fd cf       	rjmp	.-6      	; 0xa82 <uart_putchar+0x12>
	UDR0 = c;
     a88:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	cf 91       	pop	r28
     a92:	08 95       	ret

00000a94 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     a94:	e0 ec       	ldi	r30, 0xC0	; 192
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	80 81       	ld	r24, Z
     a9a:	88 23       	and	r24, r24
     a9c:	ec f7       	brge	.-6      	; 0xa98 <uart_getchar+0x4>
	return UDR0;
     a9e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	08 95       	ret

00000aa6 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
     aa6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
     aaa:	87 e6       	ldi	r24, 0x67	; 103
     aac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     ab0:	88 e1       	ldi	r24, 0x18	; 24
     ab2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
     ab6:	e7 ec       	ldi	r30, 0xC7	; 199
     ab8:	f2 e0       	ldi	r31, 0x02	; 2
     aba:	88 e1       	ldi	r24, 0x18	; 24
     abc:	91 e0       	ldi	r25, 0x01	; 1
     abe:	93 83       	std	Z+3, r25	; 0x03
     ac0:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
     ac2:	8a e0       	ldi	r24, 0x0A	; 10
     ac4:	91 e0       	ldi	r25, 0x01	; 1
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	80 83       	st	Z, r24
     aca:	08 95       	ret

00000acc <__subsf3>:
     acc:	50 58       	subi	r21, 0x80	; 128

00000ace <__addsf3>:
     ace:	bb 27       	eor	r27, r27
     ad0:	aa 27       	eor	r26, r26
     ad2:	0e 94 7e 05 	call	0xafc	; 0xafc <__addsf3x>
     ad6:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <__fp_round>
     ada:	0e 94 19 06 	call	0xc32	; 0xc32 <__fp_pscA>
     ade:	38 f0       	brcs	.+14     	; 0xaee <__addsf3+0x20>
     ae0:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_pscB>
     ae4:	20 f0       	brcs	.+8      	; 0xaee <__addsf3+0x20>
     ae6:	39 f4       	brne	.+14     	; 0xaf6 <__addsf3+0x28>
     ae8:	9f 3f       	cpi	r25, 0xFF	; 255
     aea:	19 f4       	brne	.+6      	; 0xaf2 <__addsf3+0x24>
     aec:	26 f4       	brtc	.+8      	; 0xaf6 <__addsf3+0x28>
     aee:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__fp_nan>
     af2:	0e f4       	brtc	.+2      	; 0xaf6 <__addsf3+0x28>
     af4:	e0 95       	com	r30
     af6:	e7 fb       	bst	r30, 7
     af8:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__fp_inf>

00000afc <__addsf3x>:
     afc:	e9 2f       	mov	r30, r25
     afe:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_split3>
     b02:	58 f3       	brcs	.-42     	; 0xada <__addsf3+0xc>
     b04:	ba 17       	cp	r27, r26
     b06:	62 07       	cpc	r22, r18
     b08:	73 07       	cpc	r23, r19
     b0a:	84 07       	cpc	r24, r20
     b0c:	95 07       	cpc	r25, r21
     b0e:	20 f0       	brcs	.+8      	; 0xb18 <__addsf3x+0x1c>
     b10:	79 f4       	brne	.+30     	; 0xb30 <__addsf3x+0x34>
     b12:	a6 f5       	brtc	.+104    	; 0xb7c <__addsf3x+0x80>
     b14:	0c 94 5a 06 	jmp	0xcb4	; 0xcb4 <__fp_zero>
     b18:	0e f4       	brtc	.+2      	; 0xb1c <__addsf3x+0x20>
     b1a:	e0 95       	com	r30
     b1c:	0b 2e       	mov	r0, r27
     b1e:	ba 2f       	mov	r27, r26
     b20:	a0 2d       	mov	r26, r0
     b22:	0b 01       	movw	r0, r22
     b24:	b9 01       	movw	r22, r18
     b26:	90 01       	movw	r18, r0
     b28:	0c 01       	movw	r0, r24
     b2a:	ca 01       	movw	r24, r20
     b2c:	a0 01       	movw	r20, r0
     b2e:	11 24       	eor	r1, r1
     b30:	ff 27       	eor	r31, r31
     b32:	59 1b       	sub	r21, r25
     b34:	99 f0       	breq	.+38     	; 0xb5c <__addsf3x+0x60>
     b36:	59 3f       	cpi	r21, 0xF9	; 249
     b38:	50 f4       	brcc	.+20     	; 0xb4e <__addsf3x+0x52>
     b3a:	50 3e       	cpi	r21, 0xE0	; 224
     b3c:	68 f1       	brcs	.+90     	; 0xb98 <__addsf3x+0x9c>
     b3e:	1a 16       	cp	r1, r26
     b40:	f0 40       	sbci	r31, 0x00	; 0
     b42:	a2 2f       	mov	r26, r18
     b44:	23 2f       	mov	r18, r19
     b46:	34 2f       	mov	r19, r20
     b48:	44 27       	eor	r20, r20
     b4a:	58 5f       	subi	r21, 0xF8	; 248
     b4c:	f3 cf       	rjmp	.-26     	; 0xb34 <__addsf3x+0x38>
     b4e:	46 95       	lsr	r20
     b50:	37 95       	ror	r19
     b52:	27 95       	ror	r18
     b54:	a7 95       	ror	r26
     b56:	f0 40       	sbci	r31, 0x00	; 0
     b58:	53 95       	inc	r21
     b5a:	c9 f7       	brne	.-14     	; 0xb4e <__addsf3x+0x52>
     b5c:	7e f4       	brtc	.+30     	; 0xb7c <__addsf3x+0x80>
     b5e:	1f 16       	cp	r1, r31
     b60:	ba 0b       	sbc	r27, r26
     b62:	62 0b       	sbc	r22, r18
     b64:	73 0b       	sbc	r23, r19
     b66:	84 0b       	sbc	r24, r20
     b68:	ba f0       	brmi	.+46     	; 0xb98 <__addsf3x+0x9c>
     b6a:	91 50       	subi	r25, 0x01	; 1
     b6c:	a1 f0       	breq	.+40     	; 0xb96 <__addsf3x+0x9a>
     b6e:	ff 0f       	add	r31, r31
     b70:	bb 1f       	adc	r27, r27
     b72:	66 1f       	adc	r22, r22
     b74:	77 1f       	adc	r23, r23
     b76:	88 1f       	adc	r24, r24
     b78:	c2 f7       	brpl	.-16     	; 0xb6a <__addsf3x+0x6e>
     b7a:	0e c0       	rjmp	.+28     	; 0xb98 <__addsf3x+0x9c>
     b7c:	ba 0f       	add	r27, r26
     b7e:	62 1f       	adc	r22, r18
     b80:	73 1f       	adc	r23, r19
     b82:	84 1f       	adc	r24, r20
     b84:	48 f4       	brcc	.+18     	; 0xb98 <__addsf3x+0x9c>
     b86:	87 95       	ror	r24
     b88:	77 95       	ror	r23
     b8a:	67 95       	ror	r22
     b8c:	b7 95       	ror	r27
     b8e:	f7 95       	ror	r31
     b90:	9e 3f       	cpi	r25, 0xFE	; 254
     b92:	08 f0       	brcs	.+2      	; 0xb96 <__addsf3x+0x9a>
     b94:	b0 cf       	rjmp	.-160    	; 0xaf6 <__addsf3+0x28>
     b96:	93 95       	inc	r25
     b98:	88 0f       	add	r24, r24
     b9a:	08 f0       	brcs	.+2      	; 0xb9e <__addsf3x+0xa2>
     b9c:	99 27       	eor	r25, r25
     b9e:	ee 0f       	add	r30, r30
     ba0:	97 95       	ror	r25
     ba2:	87 95       	ror	r24
     ba4:	08 95       	ret

00000ba6 <__floatunsisf>:
     ba6:	e8 94       	clt
     ba8:	09 c0       	rjmp	.+18     	; 0xbbc <__floatsisf+0x12>

00000baa <__floatsisf>:
     baa:	97 fb       	bst	r25, 7
     bac:	3e f4       	brtc	.+14     	; 0xbbc <__floatsisf+0x12>
     bae:	90 95       	com	r25
     bb0:	80 95       	com	r24
     bb2:	70 95       	com	r23
     bb4:	61 95       	neg	r22
     bb6:	7f 4f       	sbci	r23, 0xFF	; 255
     bb8:	8f 4f       	sbci	r24, 0xFF	; 255
     bba:	9f 4f       	sbci	r25, 0xFF	; 255
     bbc:	99 23       	and	r25, r25
     bbe:	a9 f0       	breq	.+42     	; 0xbea <__floatsisf+0x40>
     bc0:	f9 2f       	mov	r31, r25
     bc2:	96 e9       	ldi	r25, 0x96	; 150
     bc4:	bb 27       	eor	r27, r27
     bc6:	93 95       	inc	r25
     bc8:	f6 95       	lsr	r31
     bca:	87 95       	ror	r24
     bcc:	77 95       	ror	r23
     bce:	67 95       	ror	r22
     bd0:	b7 95       	ror	r27
     bd2:	f1 11       	cpse	r31, r1
     bd4:	f8 cf       	rjmp	.-16     	; 0xbc6 <__floatsisf+0x1c>
     bd6:	fa f4       	brpl	.+62     	; 0xc16 <__floatsisf+0x6c>
     bd8:	bb 0f       	add	r27, r27
     bda:	11 f4       	brne	.+4      	; 0xbe0 <__floatsisf+0x36>
     bdc:	60 ff       	sbrs	r22, 0
     bde:	1b c0       	rjmp	.+54     	; 0xc16 <__floatsisf+0x6c>
     be0:	6f 5f       	subi	r22, 0xFF	; 255
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	8f 4f       	sbci	r24, 0xFF	; 255
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	16 c0       	rjmp	.+44     	; 0xc16 <__floatsisf+0x6c>
     bea:	88 23       	and	r24, r24
     bec:	11 f0       	breq	.+4      	; 0xbf2 <__floatsisf+0x48>
     bee:	96 e9       	ldi	r25, 0x96	; 150
     bf0:	11 c0       	rjmp	.+34     	; 0xc14 <__floatsisf+0x6a>
     bf2:	77 23       	and	r23, r23
     bf4:	21 f0       	breq	.+8      	; 0xbfe <__floatsisf+0x54>
     bf6:	9e e8       	ldi	r25, 0x8E	; 142
     bf8:	87 2f       	mov	r24, r23
     bfa:	76 2f       	mov	r23, r22
     bfc:	05 c0       	rjmp	.+10     	; 0xc08 <__floatsisf+0x5e>
     bfe:	66 23       	and	r22, r22
     c00:	71 f0       	breq	.+28     	; 0xc1e <__floatsisf+0x74>
     c02:	96 e8       	ldi	r25, 0x86	; 134
     c04:	86 2f       	mov	r24, r22
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	2a f0       	brmi	.+10     	; 0xc16 <__floatsisf+0x6c>
     c0c:	9a 95       	dec	r25
     c0e:	66 0f       	add	r22, r22
     c10:	77 1f       	adc	r23, r23
     c12:	88 1f       	adc	r24, r24
     c14:	da f7       	brpl	.-10     	; 0xc0c <__floatsisf+0x62>
     c16:	88 0f       	add	r24, r24
     c18:	96 95       	lsr	r25
     c1a:	87 95       	ror	r24
     c1c:	97 f9       	bld	r25, 7
     c1e:	08 95       	ret

00000c20 <__fp_inf>:
     c20:	97 f9       	bld	r25, 7
     c22:	9f 67       	ori	r25, 0x7F	; 127
     c24:	80 e8       	ldi	r24, 0x80	; 128
     c26:	70 e0       	ldi	r23, 0x00	; 0
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	08 95       	ret

00000c2c <__fp_nan>:
     c2c:	9f ef       	ldi	r25, 0xFF	; 255
     c2e:	80 ec       	ldi	r24, 0xC0	; 192
     c30:	08 95       	ret

00000c32 <__fp_pscA>:
     c32:	00 24       	eor	r0, r0
     c34:	0a 94       	dec	r0
     c36:	16 16       	cp	r1, r22
     c38:	17 06       	cpc	r1, r23
     c3a:	18 06       	cpc	r1, r24
     c3c:	09 06       	cpc	r0, r25
     c3e:	08 95       	ret

00000c40 <__fp_pscB>:
     c40:	00 24       	eor	r0, r0
     c42:	0a 94       	dec	r0
     c44:	12 16       	cp	r1, r18
     c46:	13 06       	cpc	r1, r19
     c48:	14 06       	cpc	r1, r20
     c4a:	05 06       	cpc	r0, r21
     c4c:	08 95       	ret

00000c4e <__fp_round>:
     c4e:	09 2e       	mov	r0, r25
     c50:	03 94       	inc	r0
     c52:	00 0c       	add	r0, r0
     c54:	11 f4       	brne	.+4      	; 0xc5a <__fp_round+0xc>
     c56:	88 23       	and	r24, r24
     c58:	52 f0       	brmi	.+20     	; 0xc6e <__fp_round+0x20>
     c5a:	bb 0f       	add	r27, r27
     c5c:	40 f4       	brcc	.+16     	; 0xc6e <__fp_round+0x20>
     c5e:	bf 2b       	or	r27, r31
     c60:	11 f4       	brne	.+4      	; 0xc66 <__fp_round+0x18>
     c62:	60 ff       	sbrs	r22, 0
     c64:	04 c0       	rjmp	.+8      	; 0xc6e <__fp_round+0x20>
     c66:	6f 5f       	subi	r22, 0xFF	; 255
     c68:	7f 4f       	sbci	r23, 0xFF	; 255
     c6a:	8f 4f       	sbci	r24, 0xFF	; 255
     c6c:	9f 4f       	sbci	r25, 0xFF	; 255
     c6e:	08 95       	ret

00000c70 <__fp_split3>:
     c70:	57 fd       	sbrc	r21, 7
     c72:	90 58       	subi	r25, 0x80	; 128
     c74:	44 0f       	add	r20, r20
     c76:	55 1f       	adc	r21, r21
     c78:	59 f0       	breq	.+22     	; 0xc90 <__fp_splitA+0x10>
     c7a:	5f 3f       	cpi	r21, 0xFF	; 255
     c7c:	71 f0       	breq	.+28     	; 0xc9a <__fp_splitA+0x1a>
     c7e:	47 95       	ror	r20

00000c80 <__fp_splitA>:
     c80:	88 0f       	add	r24, r24
     c82:	97 fb       	bst	r25, 7
     c84:	99 1f       	adc	r25, r25
     c86:	61 f0       	breq	.+24     	; 0xca0 <__fp_splitA+0x20>
     c88:	9f 3f       	cpi	r25, 0xFF	; 255
     c8a:	79 f0       	breq	.+30     	; 0xcaa <__fp_splitA+0x2a>
     c8c:	87 95       	ror	r24
     c8e:	08 95       	ret
     c90:	12 16       	cp	r1, r18
     c92:	13 06       	cpc	r1, r19
     c94:	14 06       	cpc	r1, r20
     c96:	55 1f       	adc	r21, r21
     c98:	f2 cf       	rjmp	.-28     	; 0xc7e <__fp_split3+0xe>
     c9a:	46 95       	lsr	r20
     c9c:	f1 df       	rcall	.-30     	; 0xc80 <__fp_splitA>
     c9e:	08 c0       	rjmp	.+16     	; 0xcb0 <__fp_splitA+0x30>
     ca0:	16 16       	cp	r1, r22
     ca2:	17 06       	cpc	r1, r23
     ca4:	18 06       	cpc	r1, r24
     ca6:	99 1f       	adc	r25, r25
     ca8:	f1 cf       	rjmp	.-30     	; 0xc8c <__fp_splitA+0xc>
     caa:	86 95       	lsr	r24
     cac:	71 05       	cpc	r23, r1
     cae:	61 05       	cpc	r22, r1
     cb0:	08 94       	sec
     cb2:	08 95       	ret

00000cb4 <__fp_zero>:
     cb4:	e8 94       	clt

00000cb6 <__fp_szero>:
     cb6:	bb 27       	eor	r27, r27
     cb8:	66 27       	eor	r22, r22
     cba:	77 27       	eor	r23, r23
     cbc:	cb 01       	movw	r24, r22
     cbe:	97 f9       	bld	r25, 7
     cc0:	08 95       	ret

00000cc2 <__mulsf3>:
     cc2:	0e 94 74 06 	call	0xce8	; 0xce8 <__mulsf3x>
     cc6:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <__fp_round>
     cca:	0e 94 19 06 	call	0xc32	; 0xc32 <__fp_pscA>
     cce:	38 f0       	brcs	.+14     	; 0xcde <__mulsf3+0x1c>
     cd0:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_pscB>
     cd4:	20 f0       	brcs	.+8      	; 0xcde <__mulsf3+0x1c>
     cd6:	95 23       	and	r25, r21
     cd8:	11 f0       	breq	.+4      	; 0xcde <__mulsf3+0x1c>
     cda:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__fp_inf>
     cde:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__fp_nan>
     ce2:	11 24       	eor	r1, r1
     ce4:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>

00000ce8 <__mulsf3x>:
     ce8:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_split3>
     cec:	70 f3       	brcs	.-36     	; 0xcca <__mulsf3+0x8>

00000cee <__mulsf3_pse>:
     cee:	95 9f       	mul	r25, r21
     cf0:	c1 f3       	breq	.-16     	; 0xce2 <__mulsf3+0x20>
     cf2:	95 0f       	add	r25, r21
     cf4:	50 e0       	ldi	r21, 0x00	; 0
     cf6:	55 1f       	adc	r21, r21
     cf8:	62 9f       	mul	r22, r18
     cfa:	f0 01       	movw	r30, r0
     cfc:	72 9f       	mul	r23, r18
     cfe:	bb 27       	eor	r27, r27
     d00:	f0 0d       	add	r31, r0
     d02:	b1 1d       	adc	r27, r1
     d04:	63 9f       	mul	r22, r19
     d06:	aa 27       	eor	r26, r26
     d08:	f0 0d       	add	r31, r0
     d0a:	b1 1d       	adc	r27, r1
     d0c:	aa 1f       	adc	r26, r26
     d0e:	64 9f       	mul	r22, r20
     d10:	66 27       	eor	r22, r22
     d12:	b0 0d       	add	r27, r0
     d14:	a1 1d       	adc	r26, r1
     d16:	66 1f       	adc	r22, r22
     d18:	82 9f       	mul	r24, r18
     d1a:	22 27       	eor	r18, r18
     d1c:	b0 0d       	add	r27, r0
     d1e:	a1 1d       	adc	r26, r1
     d20:	62 1f       	adc	r22, r18
     d22:	73 9f       	mul	r23, r19
     d24:	b0 0d       	add	r27, r0
     d26:	a1 1d       	adc	r26, r1
     d28:	62 1f       	adc	r22, r18
     d2a:	83 9f       	mul	r24, r19
     d2c:	a0 0d       	add	r26, r0
     d2e:	61 1d       	adc	r22, r1
     d30:	22 1f       	adc	r18, r18
     d32:	74 9f       	mul	r23, r20
     d34:	33 27       	eor	r19, r19
     d36:	a0 0d       	add	r26, r0
     d38:	61 1d       	adc	r22, r1
     d3a:	23 1f       	adc	r18, r19
     d3c:	84 9f       	mul	r24, r20
     d3e:	60 0d       	add	r22, r0
     d40:	21 1d       	adc	r18, r1
     d42:	82 2f       	mov	r24, r18
     d44:	76 2f       	mov	r23, r22
     d46:	6a 2f       	mov	r22, r26
     d48:	11 24       	eor	r1, r1
     d4a:	9f 57       	subi	r25, 0x7F	; 127
     d4c:	50 40       	sbci	r21, 0x00	; 0
     d4e:	9a f0       	brmi	.+38     	; 0xd76 <__mulsf3_pse+0x88>
     d50:	f1 f0       	breq	.+60     	; 0xd8e <__mulsf3_pse+0xa0>
     d52:	88 23       	and	r24, r24
     d54:	4a f0       	brmi	.+18     	; 0xd68 <__mulsf3_pse+0x7a>
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	bb 1f       	adc	r27, r27
     d5c:	66 1f       	adc	r22, r22
     d5e:	77 1f       	adc	r23, r23
     d60:	88 1f       	adc	r24, r24
     d62:	91 50       	subi	r25, 0x01	; 1
     d64:	50 40       	sbci	r21, 0x00	; 0
     d66:	a9 f7       	brne	.-22     	; 0xd52 <__mulsf3_pse+0x64>
     d68:	9e 3f       	cpi	r25, 0xFE	; 254
     d6a:	51 05       	cpc	r21, r1
     d6c:	80 f0       	brcs	.+32     	; 0xd8e <__mulsf3_pse+0xa0>
     d6e:	0c 94 10 06 	jmp	0xc20	; 0xc20 <__fp_inf>
     d72:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>
     d76:	5f 3f       	cpi	r21, 0xFF	; 255
     d78:	e4 f3       	brlt	.-8      	; 0xd72 <__mulsf3_pse+0x84>
     d7a:	98 3e       	cpi	r25, 0xE8	; 232
     d7c:	d4 f3       	brlt	.-12     	; 0xd72 <__mulsf3_pse+0x84>
     d7e:	86 95       	lsr	r24
     d80:	77 95       	ror	r23
     d82:	67 95       	ror	r22
     d84:	b7 95       	ror	r27
     d86:	f7 95       	ror	r31
     d88:	e7 95       	ror	r30
     d8a:	9f 5f       	subi	r25, 0xFF	; 255
     d8c:	c1 f7       	brne	.-16     	; 0xd7e <__mulsf3_pse+0x90>
     d8e:	fe 2b       	or	r31, r30
     d90:	88 0f       	add	r24, r24
     d92:	91 1d       	adc	r25, r1
     d94:	96 95       	lsr	r25
     d96:	87 95       	ror	r24
     d98:	97 f9       	bld	r25, 7
     d9a:	08 95       	ret

00000d9c <vfprintf>:
     d9c:	a0 e1       	ldi	r26, 0x10	; 16
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e4 ed       	ldi	r30, 0xD4	; 212
     da2:	f6 e0       	ldi	r31, 0x06	; 6
     da4:	0c 94 4b 0a 	jmp	0x1496	; 0x1496 <__prologue_saves__>
     da8:	7c 01       	movw	r14, r24
     daa:	1b 01       	movw	r2, r22
     dac:	6a 01       	movw	r12, r20
     dae:	fc 01       	movw	r30, r24
     db0:	17 82       	std	Z+7, r1	; 0x07
     db2:	16 82       	std	Z+6, r1	; 0x06
     db4:	83 81       	ldd	r24, Z+3	; 0x03
     db6:	81 ff       	sbrs	r24, 1
     db8:	44 c3       	rjmp	.+1672   	; 0x1442 <vfprintf+0x6a6>
     dba:	9e 01       	movw	r18, r28
     dbc:	2f 5f       	subi	r18, 0xFF	; 255
     dbe:	3f 4f       	sbci	r19, 0xFF	; 255
     dc0:	39 01       	movw	r6, r18
     dc2:	f7 01       	movw	r30, r14
     dc4:	93 81       	ldd	r25, Z+3	; 0x03
     dc6:	f1 01       	movw	r30, r2
     dc8:	93 fd       	sbrc	r25, 3
     dca:	85 91       	lpm	r24, Z+
     dcc:	93 ff       	sbrs	r25, 3
     dce:	81 91       	ld	r24, Z+
     dd0:	1f 01       	movw	r2, r30
     dd2:	88 23       	and	r24, r24
     dd4:	09 f4       	brne	.+2      	; 0xdd8 <vfprintf+0x3c>
     dd6:	31 c3       	rjmp	.+1634   	; 0x143a <vfprintf+0x69e>
     dd8:	85 32       	cpi	r24, 0x25	; 37
     dda:	39 f4       	brne	.+14     	; 0xdea <vfprintf+0x4e>
     ddc:	93 fd       	sbrc	r25, 3
     dde:	85 91       	lpm	r24, Z+
     de0:	93 ff       	sbrs	r25, 3
     de2:	81 91       	ld	r24, Z+
     de4:	1f 01       	movw	r2, r30
     de6:	85 32       	cpi	r24, 0x25	; 37
     de8:	39 f4       	brne	.+14     	; 0xdf8 <vfprintf+0x5c>
     dea:	b7 01       	movw	r22, r14
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
     df2:	56 01       	movw	r10, r12
     df4:	65 01       	movw	r12, r10
     df6:	e5 cf       	rjmp	.-54     	; 0xdc2 <vfprintf+0x26>
     df8:	10 e0       	ldi	r17, 0x00	; 0
     dfa:	51 2c       	mov	r5, r1
     dfc:	91 2c       	mov	r9, r1
     dfe:	ff e1       	ldi	r31, 0x1F	; 31
     e00:	f9 15       	cp	r31, r9
     e02:	d8 f0       	brcs	.+54     	; 0xe3a <vfprintf+0x9e>
     e04:	8b 32       	cpi	r24, 0x2B	; 43
     e06:	79 f0       	breq	.+30     	; 0xe26 <vfprintf+0x8a>
     e08:	38 f4       	brcc	.+14     	; 0xe18 <vfprintf+0x7c>
     e0a:	80 32       	cpi	r24, 0x20	; 32
     e0c:	79 f0       	breq	.+30     	; 0xe2c <vfprintf+0x90>
     e0e:	83 32       	cpi	r24, 0x23	; 35
     e10:	a1 f4       	brne	.+40     	; 0xe3a <vfprintf+0x9e>
     e12:	f9 2d       	mov	r31, r9
     e14:	f0 61       	ori	r31, 0x10	; 16
     e16:	2e c0       	rjmp	.+92     	; 0xe74 <vfprintf+0xd8>
     e18:	8d 32       	cpi	r24, 0x2D	; 45
     e1a:	61 f0       	breq	.+24     	; 0xe34 <vfprintf+0x98>
     e1c:	80 33       	cpi	r24, 0x30	; 48
     e1e:	69 f4       	brne	.+26     	; 0xe3a <vfprintf+0x9e>
     e20:	29 2d       	mov	r18, r9
     e22:	21 60       	ori	r18, 0x01	; 1
     e24:	2d c0       	rjmp	.+90     	; 0xe80 <vfprintf+0xe4>
     e26:	39 2d       	mov	r19, r9
     e28:	32 60       	ori	r19, 0x02	; 2
     e2a:	93 2e       	mov	r9, r19
     e2c:	89 2d       	mov	r24, r9
     e2e:	84 60       	ori	r24, 0x04	; 4
     e30:	98 2e       	mov	r9, r24
     e32:	2a c0       	rjmp	.+84     	; 0xe88 <vfprintf+0xec>
     e34:	e9 2d       	mov	r30, r9
     e36:	e8 60       	ori	r30, 0x08	; 8
     e38:	15 c0       	rjmp	.+42     	; 0xe64 <vfprintf+0xc8>
     e3a:	97 fc       	sbrc	r9, 7
     e3c:	2d c0       	rjmp	.+90     	; 0xe98 <vfprintf+0xfc>
     e3e:	20 ed       	ldi	r18, 0xD0	; 208
     e40:	28 0f       	add	r18, r24
     e42:	2a 30       	cpi	r18, 0x0A	; 10
     e44:	88 f4       	brcc	.+34     	; 0xe68 <vfprintf+0xcc>
     e46:	96 fe       	sbrs	r9, 6
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0xba>
     e4a:	3a e0       	ldi	r19, 0x0A	; 10
     e4c:	13 9f       	mul	r17, r19
     e4e:	20 0d       	add	r18, r0
     e50:	11 24       	eor	r1, r1
     e52:	12 2f       	mov	r17, r18
     e54:	19 c0       	rjmp	.+50     	; 0xe88 <vfprintf+0xec>
     e56:	8a e0       	ldi	r24, 0x0A	; 10
     e58:	58 9e       	mul	r5, r24
     e5a:	20 0d       	add	r18, r0
     e5c:	11 24       	eor	r1, r1
     e5e:	52 2e       	mov	r5, r18
     e60:	e9 2d       	mov	r30, r9
     e62:	e0 62       	ori	r30, 0x20	; 32
     e64:	9e 2e       	mov	r9, r30
     e66:	10 c0       	rjmp	.+32     	; 0xe88 <vfprintf+0xec>
     e68:	8e 32       	cpi	r24, 0x2E	; 46
     e6a:	31 f4       	brne	.+12     	; 0xe78 <vfprintf+0xdc>
     e6c:	96 fc       	sbrc	r9, 6
     e6e:	e5 c2       	rjmp	.+1482   	; 0x143a <vfprintf+0x69e>
     e70:	f9 2d       	mov	r31, r9
     e72:	f0 64       	ori	r31, 0x40	; 64
     e74:	9f 2e       	mov	r9, r31
     e76:	08 c0       	rjmp	.+16     	; 0xe88 <vfprintf+0xec>
     e78:	8c 36       	cpi	r24, 0x6C	; 108
     e7a:	21 f4       	brne	.+8      	; 0xe84 <vfprintf+0xe8>
     e7c:	29 2d       	mov	r18, r9
     e7e:	20 68       	ori	r18, 0x80	; 128
     e80:	92 2e       	mov	r9, r18
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <vfprintf+0xec>
     e84:	88 36       	cpi	r24, 0x68	; 104
     e86:	41 f4       	brne	.+16     	; 0xe98 <vfprintf+0xfc>
     e88:	f1 01       	movw	r30, r2
     e8a:	93 fd       	sbrc	r25, 3
     e8c:	85 91       	lpm	r24, Z+
     e8e:	93 ff       	sbrs	r25, 3
     e90:	81 91       	ld	r24, Z+
     e92:	1f 01       	movw	r2, r30
     e94:	81 11       	cpse	r24, r1
     e96:	b3 cf       	rjmp	.-154    	; 0xdfe <vfprintf+0x62>
     e98:	9b eb       	ldi	r25, 0xBB	; 187
     e9a:	98 0f       	add	r25, r24
     e9c:	93 30       	cpi	r25, 0x03	; 3
     e9e:	20 f4       	brcc	.+8      	; 0xea8 <vfprintf+0x10c>
     ea0:	99 2d       	mov	r25, r9
     ea2:	90 61       	ori	r25, 0x10	; 16
     ea4:	80 5e       	subi	r24, 0xE0	; 224
     ea6:	07 c0       	rjmp	.+14     	; 0xeb6 <vfprintf+0x11a>
     ea8:	9b e9       	ldi	r25, 0x9B	; 155
     eaa:	98 0f       	add	r25, r24
     eac:	93 30       	cpi	r25, 0x03	; 3
     eae:	08 f0       	brcs	.+2      	; 0xeb2 <vfprintf+0x116>
     eb0:	66 c1       	rjmp	.+716    	; 0x117e <vfprintf+0x3e2>
     eb2:	99 2d       	mov	r25, r9
     eb4:	9f 7e       	andi	r25, 0xEF	; 239
     eb6:	96 ff       	sbrs	r25, 6
     eb8:	16 e0       	ldi	r17, 0x06	; 6
     eba:	9f 73       	andi	r25, 0x3F	; 63
     ebc:	99 2e       	mov	r9, r25
     ebe:	85 36       	cpi	r24, 0x65	; 101
     ec0:	19 f4       	brne	.+6      	; 0xec8 <vfprintf+0x12c>
     ec2:	90 64       	ori	r25, 0x40	; 64
     ec4:	99 2e       	mov	r9, r25
     ec6:	08 c0       	rjmp	.+16     	; 0xed8 <vfprintf+0x13c>
     ec8:	86 36       	cpi	r24, 0x66	; 102
     eca:	21 f4       	brne	.+8      	; 0xed4 <vfprintf+0x138>
     ecc:	39 2f       	mov	r19, r25
     ece:	30 68       	ori	r19, 0x80	; 128
     ed0:	93 2e       	mov	r9, r19
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x13c>
     ed4:	11 11       	cpse	r17, r1
     ed6:	11 50       	subi	r17, 0x01	; 1
     ed8:	97 fe       	sbrs	r9, 7
     eda:	07 c0       	rjmp	.+14     	; 0xeea <vfprintf+0x14e>
     edc:	1c 33       	cpi	r17, 0x3C	; 60
     ede:	50 f4       	brcc	.+20     	; 0xef4 <vfprintf+0x158>
     ee0:	44 24       	eor	r4, r4
     ee2:	43 94       	inc	r4
     ee4:	41 0e       	add	r4, r17
     ee6:	27 e0       	ldi	r18, 0x07	; 7
     ee8:	0b c0       	rjmp	.+22     	; 0xf00 <vfprintf+0x164>
     eea:	18 30       	cpi	r17, 0x08	; 8
     eec:	38 f0       	brcs	.+14     	; 0xefc <vfprintf+0x160>
     eee:	27 e0       	ldi	r18, 0x07	; 7
     ef0:	17 e0       	ldi	r17, 0x07	; 7
     ef2:	05 c0       	rjmp	.+10     	; 0xefe <vfprintf+0x162>
     ef4:	27 e0       	ldi	r18, 0x07	; 7
     ef6:	9c e3       	ldi	r25, 0x3C	; 60
     ef8:	49 2e       	mov	r4, r25
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x164>
     efc:	21 2f       	mov	r18, r17
     efe:	41 2c       	mov	r4, r1
     f00:	56 01       	movw	r10, r12
     f02:	84 e0       	ldi	r24, 0x04	; 4
     f04:	a8 0e       	add	r10, r24
     f06:	b1 1c       	adc	r11, r1
     f08:	f6 01       	movw	r30, r12
     f0a:	60 81       	ld	r22, Z
     f0c:	71 81       	ldd	r23, Z+1	; 0x01
     f0e:	82 81       	ldd	r24, Z+2	; 0x02
     f10:	93 81       	ldd	r25, Z+3	; 0x03
     f12:	04 2d       	mov	r16, r4
     f14:	a3 01       	movw	r20, r6
     f16:	0e 94 82 0a 	call	0x1504	; 0x1504 <__ftoa_engine>
     f1a:	6c 01       	movw	r12, r24
     f1c:	f9 81       	ldd	r31, Y+1	; 0x01
     f1e:	fc 87       	std	Y+12, r31	; 0x0c
     f20:	f0 ff       	sbrs	r31, 0
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <vfprintf+0x18c>
     f24:	f3 ff       	sbrs	r31, 3
     f26:	06 c0       	rjmp	.+12     	; 0xf34 <vfprintf+0x198>
     f28:	91 fc       	sbrc	r9, 1
     f2a:	06 c0       	rjmp	.+12     	; 0xf38 <vfprintf+0x19c>
     f2c:	92 fe       	sbrs	r9, 2
     f2e:	06 c0       	rjmp	.+12     	; 0xf3c <vfprintf+0x1a0>
     f30:	00 e2       	ldi	r16, 0x20	; 32
     f32:	05 c0       	rjmp	.+10     	; 0xf3e <vfprintf+0x1a2>
     f34:	0d e2       	ldi	r16, 0x2D	; 45
     f36:	03 c0       	rjmp	.+6      	; 0xf3e <vfprintf+0x1a2>
     f38:	0b e2       	ldi	r16, 0x2B	; 43
     f3a:	01 c0       	rjmp	.+2      	; 0xf3e <vfprintf+0x1a2>
     f3c:	00 e0       	ldi	r16, 0x00	; 0
     f3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     f40:	8c 70       	andi	r24, 0x0C	; 12
     f42:	19 f0       	breq	.+6      	; 0xf4a <vfprintf+0x1ae>
     f44:	01 11       	cpse	r16, r1
     f46:	5a c2       	rjmp	.+1204   	; 0x13fc <vfprintf+0x660>
     f48:	9b c2       	rjmp	.+1334   	; 0x1480 <vfprintf+0x6e4>
     f4a:	97 fe       	sbrs	r9, 7
     f4c:	10 c0       	rjmp	.+32     	; 0xf6e <vfprintf+0x1d2>
     f4e:	4c 0c       	add	r4, r12
     f50:	fc 85       	ldd	r31, Y+12	; 0x0c
     f52:	f4 ff       	sbrs	r31, 4
     f54:	04 c0       	rjmp	.+8      	; 0xf5e <vfprintf+0x1c2>
     f56:	8a 81       	ldd	r24, Y+2	; 0x02
     f58:	81 33       	cpi	r24, 0x31	; 49
     f5a:	09 f4       	brne	.+2      	; 0xf5e <vfprintf+0x1c2>
     f5c:	4a 94       	dec	r4
     f5e:	14 14       	cp	r1, r4
     f60:	74 f5       	brge	.+92     	; 0xfbe <vfprintf+0x222>
     f62:	28 e0       	ldi	r18, 0x08	; 8
     f64:	24 15       	cp	r18, r4
     f66:	78 f5       	brcc	.+94     	; 0xfc6 <vfprintf+0x22a>
     f68:	88 e0       	ldi	r24, 0x08	; 8
     f6a:	48 2e       	mov	r4, r24
     f6c:	2c c0       	rjmp	.+88     	; 0xfc6 <vfprintf+0x22a>
     f6e:	96 fc       	sbrc	r9, 6
     f70:	2a c0       	rjmp	.+84     	; 0xfc6 <vfprintf+0x22a>
     f72:	81 2f       	mov	r24, r17
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	8c 15       	cp	r24, r12
     f78:	9d 05       	cpc	r25, r13
     f7a:	9c f0       	brlt	.+38     	; 0xfa2 <vfprintf+0x206>
     f7c:	3c ef       	ldi	r19, 0xFC	; 252
     f7e:	c3 16       	cp	r12, r19
     f80:	3f ef       	ldi	r19, 0xFF	; 255
     f82:	d3 06       	cpc	r13, r19
     f84:	74 f0       	brlt	.+28     	; 0xfa2 <vfprintf+0x206>
     f86:	89 2d       	mov	r24, r9
     f88:	80 68       	ori	r24, 0x80	; 128
     f8a:	98 2e       	mov	r9, r24
     f8c:	0a c0       	rjmp	.+20     	; 0xfa2 <vfprintf+0x206>
     f8e:	e2 e0       	ldi	r30, 0x02	; 2
     f90:	f0 e0       	ldi	r31, 0x00	; 0
     f92:	ec 0f       	add	r30, r28
     f94:	fd 1f       	adc	r31, r29
     f96:	e1 0f       	add	r30, r17
     f98:	f1 1d       	adc	r31, r1
     f9a:	80 81       	ld	r24, Z
     f9c:	80 33       	cpi	r24, 0x30	; 48
     f9e:	19 f4       	brne	.+6      	; 0xfa6 <vfprintf+0x20a>
     fa0:	11 50       	subi	r17, 0x01	; 1
     fa2:	11 11       	cpse	r17, r1
     fa4:	f4 cf       	rjmp	.-24     	; 0xf8e <vfprintf+0x1f2>
     fa6:	97 fe       	sbrs	r9, 7
     fa8:	0e c0       	rjmp	.+28     	; 0xfc6 <vfprintf+0x22a>
     faa:	44 24       	eor	r4, r4
     fac:	43 94       	inc	r4
     fae:	41 0e       	add	r4, r17
     fb0:	81 2f       	mov	r24, r17
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	c8 16       	cp	r12, r24
     fb6:	d9 06       	cpc	r13, r25
     fb8:	2c f4       	brge	.+10     	; 0xfc4 <vfprintf+0x228>
     fba:	1c 19       	sub	r17, r12
     fbc:	04 c0       	rjmp	.+8      	; 0xfc6 <vfprintf+0x22a>
     fbe:	44 24       	eor	r4, r4
     fc0:	43 94       	inc	r4
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <vfprintf+0x22a>
     fc4:	10 e0       	ldi	r17, 0x00	; 0
     fc6:	97 fe       	sbrs	r9, 7
     fc8:	06 c0       	rjmp	.+12     	; 0xfd6 <vfprintf+0x23a>
     fca:	1c 14       	cp	r1, r12
     fcc:	1d 04       	cpc	r1, r13
     fce:	34 f4       	brge	.+12     	; 0xfdc <vfprintf+0x240>
     fd0:	c6 01       	movw	r24, r12
     fd2:	01 96       	adiw	r24, 0x01	; 1
     fd4:	05 c0       	rjmp	.+10     	; 0xfe0 <vfprintf+0x244>
     fd6:	85 e0       	ldi	r24, 0x05	; 5
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <vfprintf+0x244>
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	01 11       	cpse	r16, r1
     fe2:	01 96       	adiw	r24, 0x01	; 1
     fe4:	11 23       	and	r17, r17
     fe6:	31 f0       	breq	.+12     	; 0xff4 <vfprintf+0x258>
     fe8:	21 2f       	mov	r18, r17
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	2f 5f       	subi	r18, 0xFF	; 255
     fee:	3f 4f       	sbci	r19, 0xFF	; 255
     ff0:	82 0f       	add	r24, r18
     ff2:	93 1f       	adc	r25, r19
     ff4:	25 2d       	mov	r18, r5
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	82 17       	cp	r24, r18
     ffa:	93 07       	cpc	r25, r19
     ffc:	14 f4       	brge	.+4      	; 0x1002 <vfprintf+0x266>
     ffe:	58 1a       	sub	r5, r24
    1000:	01 c0       	rjmp	.+2      	; 0x1004 <vfprintf+0x268>
    1002:	51 2c       	mov	r5, r1
    1004:	89 2d       	mov	r24, r9
    1006:	89 70       	andi	r24, 0x09	; 9
    1008:	49 f4       	brne	.+18     	; 0x101c <vfprintf+0x280>
    100a:	55 20       	and	r5, r5
    100c:	39 f0       	breq	.+14     	; 0x101c <vfprintf+0x280>
    100e:	b7 01       	movw	r22, r14
    1010:	80 e2       	ldi	r24, 0x20	; 32
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1018:	5a 94       	dec	r5
    101a:	f7 cf       	rjmp	.-18     	; 0x100a <vfprintf+0x26e>
    101c:	00 23       	and	r16, r16
    101e:	29 f0       	breq	.+10     	; 0x102a <vfprintf+0x28e>
    1020:	b7 01       	movw	r22, r14
    1022:	80 2f       	mov	r24, r16
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    102a:	93 fc       	sbrc	r9, 3
    102c:	09 c0       	rjmp	.+18     	; 0x1040 <vfprintf+0x2a4>
    102e:	55 20       	and	r5, r5
    1030:	39 f0       	breq	.+14     	; 0x1040 <vfprintf+0x2a4>
    1032:	b7 01       	movw	r22, r14
    1034:	80 e3       	ldi	r24, 0x30	; 48
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    103c:	5a 94       	dec	r5
    103e:	f7 cf       	rjmp	.-18     	; 0x102e <vfprintf+0x292>
    1040:	97 fe       	sbrs	r9, 7
    1042:	4c c0       	rjmp	.+152    	; 0x10dc <vfprintf+0x340>
    1044:	46 01       	movw	r8, r12
    1046:	d7 fe       	sbrs	r13, 7
    1048:	02 c0       	rjmp	.+4      	; 0x104e <vfprintf+0x2b2>
    104a:	81 2c       	mov	r8, r1
    104c:	91 2c       	mov	r9, r1
    104e:	c6 01       	movw	r24, r12
    1050:	88 19       	sub	r24, r8
    1052:	99 09       	sbc	r25, r9
    1054:	f3 01       	movw	r30, r6
    1056:	e8 0f       	add	r30, r24
    1058:	f9 1f       	adc	r31, r25
    105a:	fe 87       	std	Y+14, r31	; 0x0e
    105c:	ed 87       	std	Y+13, r30	; 0x0d
    105e:	96 01       	movw	r18, r12
    1060:	24 19       	sub	r18, r4
    1062:	31 09       	sbc	r19, r1
    1064:	38 8b       	std	Y+16, r19	; 0x10
    1066:	2f 87       	std	Y+15, r18	; 0x0f
    1068:	01 2f       	mov	r16, r17
    106a:	10 e0       	ldi	r17, 0x00	; 0
    106c:	11 95       	neg	r17
    106e:	01 95       	neg	r16
    1070:	11 09       	sbc	r17, r1
    1072:	3f ef       	ldi	r19, 0xFF	; 255
    1074:	83 16       	cp	r8, r19
    1076:	93 06       	cpc	r9, r19
    1078:	29 f4       	brne	.+10     	; 0x1084 <vfprintf+0x2e8>
    107a:	b7 01       	movw	r22, r14
    107c:	8e e2       	ldi	r24, 0x2E	; 46
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1084:	c8 14       	cp	r12, r8
    1086:	d9 04       	cpc	r13, r9
    1088:	4c f0       	brlt	.+18     	; 0x109c <vfprintf+0x300>
    108a:	8f 85       	ldd	r24, Y+15	; 0x0f
    108c:	98 89       	ldd	r25, Y+16	; 0x10
    108e:	88 15       	cp	r24, r8
    1090:	99 05       	cpc	r25, r9
    1092:	24 f4       	brge	.+8      	; 0x109c <vfprintf+0x300>
    1094:	ed 85       	ldd	r30, Y+13	; 0x0d
    1096:	fe 85       	ldd	r31, Y+14	; 0x0e
    1098:	81 81       	ldd	r24, Z+1	; 0x01
    109a:	01 c0       	rjmp	.+2      	; 0x109e <vfprintf+0x302>
    109c:	80 e3       	ldi	r24, 0x30	; 48
    109e:	f1 e0       	ldi	r31, 0x01	; 1
    10a0:	8f 1a       	sub	r8, r31
    10a2:	91 08       	sbc	r9, r1
    10a4:	2d 85       	ldd	r18, Y+13	; 0x0d
    10a6:	3e 85       	ldd	r19, Y+14	; 0x0e
    10a8:	2f 5f       	subi	r18, 0xFF	; 255
    10aa:	3f 4f       	sbci	r19, 0xFF	; 255
    10ac:	3e 87       	std	Y+14, r19	; 0x0e
    10ae:	2d 87       	std	Y+13, r18	; 0x0d
    10b0:	80 16       	cp	r8, r16
    10b2:	91 06       	cpc	r9, r17
    10b4:	2c f0       	brlt	.+10     	; 0x10c0 <vfprintf+0x324>
    10b6:	b7 01       	movw	r22, r14
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    10be:	d9 cf       	rjmp	.-78     	; 0x1072 <vfprintf+0x2d6>
    10c0:	c8 14       	cp	r12, r8
    10c2:	d9 04       	cpc	r13, r9
    10c4:	41 f4       	brne	.+16     	; 0x10d6 <vfprintf+0x33a>
    10c6:	9a 81       	ldd	r25, Y+2	; 0x02
    10c8:	96 33       	cpi	r25, 0x36	; 54
    10ca:	20 f4       	brcc	.+8      	; 0x10d4 <vfprintf+0x338>
    10cc:	95 33       	cpi	r25, 0x35	; 53
    10ce:	19 f4       	brne	.+6      	; 0x10d6 <vfprintf+0x33a>
    10d0:	3c 85       	ldd	r19, Y+12	; 0x0c
    10d2:	34 ff       	sbrs	r19, 4
    10d4:	81 e3       	ldi	r24, 0x31	; 49
    10d6:	b7 01       	movw	r22, r14
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	4e c0       	rjmp	.+156    	; 0x1178 <vfprintf+0x3dc>
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	81 33       	cpi	r24, 0x31	; 49
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <vfprintf+0x34c>
    10e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    10e4:	9f 7e       	andi	r25, 0xEF	; 239
    10e6:	9c 87       	std	Y+12, r25	; 0x0c
    10e8:	b7 01       	movw	r22, r14
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    10f0:	11 11       	cpse	r17, r1
    10f2:	05 c0       	rjmp	.+10     	; 0x10fe <vfprintf+0x362>
    10f4:	94 fc       	sbrc	r9, 4
    10f6:	18 c0       	rjmp	.+48     	; 0x1128 <vfprintf+0x38c>
    10f8:	85 e6       	ldi	r24, 0x65	; 101
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	17 c0       	rjmp	.+46     	; 0x112c <vfprintf+0x390>
    10fe:	b7 01       	movw	r22, r14
    1100:	8e e2       	ldi	r24, 0x2E	; 46
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1108:	1e 5f       	subi	r17, 0xFE	; 254
    110a:	82 e0       	ldi	r24, 0x02	; 2
    110c:	01 e0       	ldi	r16, 0x01	; 1
    110e:	08 0f       	add	r16, r24
    1110:	f3 01       	movw	r30, r6
    1112:	e8 0f       	add	r30, r24
    1114:	f1 1d       	adc	r31, r1
    1116:	80 81       	ld	r24, Z
    1118:	b7 01       	movw	r22, r14
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1120:	80 2f       	mov	r24, r16
    1122:	01 13       	cpse	r16, r17
    1124:	f3 cf       	rjmp	.-26     	; 0x110c <vfprintf+0x370>
    1126:	e6 cf       	rjmp	.-52     	; 0x10f4 <vfprintf+0x358>
    1128:	85 e4       	ldi	r24, 0x45	; 69
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	b7 01       	movw	r22, r14
    112e:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1132:	d7 fc       	sbrc	r13, 7
    1134:	06 c0       	rjmp	.+12     	; 0x1142 <vfprintf+0x3a6>
    1136:	c1 14       	cp	r12, r1
    1138:	d1 04       	cpc	r13, r1
    113a:	41 f4       	brne	.+16     	; 0x114c <vfprintf+0x3b0>
    113c:	ec 85       	ldd	r30, Y+12	; 0x0c
    113e:	e4 ff       	sbrs	r30, 4
    1140:	05 c0       	rjmp	.+10     	; 0x114c <vfprintf+0x3b0>
    1142:	d1 94       	neg	r13
    1144:	c1 94       	neg	r12
    1146:	d1 08       	sbc	r13, r1
    1148:	8d e2       	ldi	r24, 0x2D	; 45
    114a:	01 c0       	rjmp	.+2      	; 0x114e <vfprintf+0x3b2>
    114c:	8b e2       	ldi	r24, 0x2B	; 43
    114e:	b7 01       	movw	r22, r14
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1156:	80 e3       	ldi	r24, 0x30	; 48
    1158:	2a e0       	ldi	r18, 0x0A	; 10
    115a:	c2 16       	cp	r12, r18
    115c:	d1 04       	cpc	r13, r1
    115e:	2c f0       	brlt	.+10     	; 0x116a <vfprintf+0x3ce>
    1160:	8f 5f       	subi	r24, 0xFF	; 255
    1162:	fa e0       	ldi	r31, 0x0A	; 10
    1164:	cf 1a       	sub	r12, r31
    1166:	d1 08       	sbc	r13, r1
    1168:	f7 cf       	rjmp	.-18     	; 0x1158 <vfprintf+0x3bc>
    116a:	b7 01       	movw	r22, r14
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1172:	b7 01       	movw	r22, r14
    1174:	c6 01       	movw	r24, r12
    1176:	c0 96       	adiw	r24, 0x30	; 48
    1178:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    117c:	54 c1       	rjmp	.+680    	; 0x1426 <vfprintf+0x68a>
    117e:	83 36       	cpi	r24, 0x63	; 99
    1180:	31 f0       	breq	.+12     	; 0x118e <vfprintf+0x3f2>
    1182:	83 37       	cpi	r24, 0x73	; 115
    1184:	79 f0       	breq	.+30     	; 0x11a4 <vfprintf+0x408>
    1186:	83 35       	cpi	r24, 0x53	; 83
    1188:	09 f0       	breq	.+2      	; 0x118c <vfprintf+0x3f0>
    118a:	56 c0       	rjmp	.+172    	; 0x1238 <vfprintf+0x49c>
    118c:	20 c0       	rjmp	.+64     	; 0x11ce <vfprintf+0x432>
    118e:	56 01       	movw	r10, r12
    1190:	32 e0       	ldi	r19, 0x02	; 2
    1192:	a3 0e       	add	r10, r19
    1194:	b1 1c       	adc	r11, r1
    1196:	f6 01       	movw	r30, r12
    1198:	80 81       	ld	r24, Z
    119a:	89 83       	std	Y+1, r24	; 0x01
    119c:	01 e0       	ldi	r16, 0x01	; 1
    119e:	10 e0       	ldi	r17, 0x00	; 0
    11a0:	63 01       	movw	r12, r6
    11a2:	12 c0       	rjmp	.+36     	; 0x11c8 <vfprintf+0x42c>
    11a4:	56 01       	movw	r10, r12
    11a6:	f2 e0       	ldi	r31, 0x02	; 2
    11a8:	af 0e       	add	r10, r31
    11aa:	b1 1c       	adc	r11, r1
    11ac:	f6 01       	movw	r30, r12
    11ae:	c0 80       	ld	r12, Z
    11b0:	d1 80       	ldd	r13, Z+1	; 0x01
    11b2:	96 fe       	sbrs	r9, 6
    11b4:	03 c0       	rjmp	.+6      	; 0x11bc <vfprintf+0x420>
    11b6:	61 2f       	mov	r22, r17
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	02 c0       	rjmp	.+4      	; 0x11c0 <vfprintf+0x424>
    11bc:	6f ef       	ldi	r22, 0xFF	; 255
    11be:	7f ef       	ldi	r23, 0xFF	; 255
    11c0:	c6 01       	movw	r24, r12
    11c2:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <strnlen>
    11c6:	8c 01       	movw	r16, r24
    11c8:	f9 2d       	mov	r31, r9
    11ca:	ff 77       	andi	r31, 0x7F	; 127
    11cc:	14 c0       	rjmp	.+40     	; 0x11f6 <vfprintf+0x45a>
    11ce:	56 01       	movw	r10, r12
    11d0:	22 e0       	ldi	r18, 0x02	; 2
    11d2:	a2 0e       	add	r10, r18
    11d4:	b1 1c       	adc	r11, r1
    11d6:	f6 01       	movw	r30, r12
    11d8:	c0 80       	ld	r12, Z
    11da:	d1 80       	ldd	r13, Z+1	; 0x01
    11dc:	96 fe       	sbrs	r9, 6
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <vfprintf+0x44a>
    11e0:	61 2f       	mov	r22, r17
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <vfprintf+0x44e>
    11e6:	6f ef       	ldi	r22, 0xFF	; 255
    11e8:	7f ef       	ldi	r23, 0xFF	; 255
    11ea:	c6 01       	movw	r24, r12
    11ec:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <strnlen_P>
    11f0:	8c 01       	movw	r16, r24
    11f2:	f9 2d       	mov	r31, r9
    11f4:	f0 68       	ori	r31, 0x80	; 128
    11f6:	9f 2e       	mov	r9, r31
    11f8:	f3 fd       	sbrc	r31, 3
    11fa:	1a c0       	rjmp	.+52     	; 0x1230 <vfprintf+0x494>
    11fc:	85 2d       	mov	r24, r5
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	08 17       	cp	r16, r24
    1202:	19 07       	cpc	r17, r25
    1204:	a8 f4       	brcc	.+42     	; 0x1230 <vfprintf+0x494>
    1206:	b7 01       	movw	r22, r14
    1208:	80 e2       	ldi	r24, 0x20	; 32
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1210:	5a 94       	dec	r5
    1212:	f4 cf       	rjmp	.-24     	; 0x11fc <vfprintf+0x460>
    1214:	f6 01       	movw	r30, r12
    1216:	97 fc       	sbrc	r9, 7
    1218:	85 91       	lpm	r24, Z+
    121a:	97 fe       	sbrs	r9, 7
    121c:	81 91       	ld	r24, Z+
    121e:	6f 01       	movw	r12, r30
    1220:	b7 01       	movw	r22, r14
    1222:	90 e0       	ldi	r25, 0x00	; 0
    1224:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1228:	51 10       	cpse	r5, r1
    122a:	5a 94       	dec	r5
    122c:	01 50       	subi	r16, 0x01	; 1
    122e:	11 09       	sbc	r17, r1
    1230:	01 15       	cp	r16, r1
    1232:	11 05       	cpc	r17, r1
    1234:	79 f7       	brne	.-34     	; 0x1214 <vfprintf+0x478>
    1236:	f7 c0       	rjmp	.+494    	; 0x1426 <vfprintf+0x68a>
    1238:	84 36       	cpi	r24, 0x64	; 100
    123a:	11 f0       	breq	.+4      	; 0x1240 <vfprintf+0x4a4>
    123c:	89 36       	cpi	r24, 0x69	; 105
    123e:	61 f5       	brne	.+88     	; 0x1298 <vfprintf+0x4fc>
    1240:	56 01       	movw	r10, r12
    1242:	97 fe       	sbrs	r9, 7
    1244:	09 c0       	rjmp	.+18     	; 0x1258 <vfprintf+0x4bc>
    1246:	24 e0       	ldi	r18, 0x04	; 4
    1248:	a2 0e       	add	r10, r18
    124a:	b1 1c       	adc	r11, r1
    124c:	f6 01       	movw	r30, r12
    124e:	60 81       	ld	r22, Z
    1250:	71 81       	ldd	r23, Z+1	; 0x01
    1252:	82 81       	ldd	r24, Z+2	; 0x02
    1254:	93 81       	ldd	r25, Z+3	; 0x03
    1256:	0a c0       	rjmp	.+20     	; 0x126c <vfprintf+0x4d0>
    1258:	f2 e0       	ldi	r31, 0x02	; 2
    125a:	af 0e       	add	r10, r31
    125c:	b1 1c       	adc	r11, r1
    125e:	f6 01       	movw	r30, r12
    1260:	60 81       	ld	r22, Z
    1262:	71 81       	ldd	r23, Z+1	; 0x01
    1264:	07 2e       	mov	r0, r23
    1266:	00 0c       	add	r0, r0
    1268:	88 0b       	sbc	r24, r24
    126a:	99 0b       	sbc	r25, r25
    126c:	f9 2d       	mov	r31, r9
    126e:	ff 76       	andi	r31, 0x6F	; 111
    1270:	9f 2e       	mov	r9, r31
    1272:	97 ff       	sbrs	r25, 7
    1274:	09 c0       	rjmp	.+18     	; 0x1288 <vfprintf+0x4ec>
    1276:	90 95       	com	r25
    1278:	80 95       	com	r24
    127a:	70 95       	com	r23
    127c:	61 95       	neg	r22
    127e:	7f 4f       	sbci	r23, 0xFF	; 255
    1280:	8f 4f       	sbci	r24, 0xFF	; 255
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	f0 68       	ori	r31, 0x80	; 128
    1286:	9f 2e       	mov	r9, r31
    1288:	2a e0       	ldi	r18, 0x0A	; 10
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	a3 01       	movw	r20, r6
    128e:	0e 94 29 0c 	call	0x1852	; 0x1852 <__ultoa_invert>
    1292:	c8 2e       	mov	r12, r24
    1294:	c6 18       	sub	r12, r6
    1296:	3f c0       	rjmp	.+126    	; 0x1316 <vfprintf+0x57a>
    1298:	09 2d       	mov	r16, r9
    129a:	85 37       	cpi	r24, 0x75	; 117
    129c:	21 f4       	brne	.+8      	; 0x12a6 <vfprintf+0x50a>
    129e:	0f 7e       	andi	r16, 0xEF	; 239
    12a0:	2a e0       	ldi	r18, 0x0A	; 10
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	1d c0       	rjmp	.+58     	; 0x12e0 <vfprintf+0x544>
    12a6:	09 7f       	andi	r16, 0xF9	; 249
    12a8:	8f 36       	cpi	r24, 0x6F	; 111
    12aa:	91 f0       	breq	.+36     	; 0x12d0 <vfprintf+0x534>
    12ac:	18 f4       	brcc	.+6      	; 0x12b4 <vfprintf+0x518>
    12ae:	88 35       	cpi	r24, 0x58	; 88
    12b0:	59 f0       	breq	.+22     	; 0x12c8 <vfprintf+0x52c>
    12b2:	c3 c0       	rjmp	.+390    	; 0x143a <vfprintf+0x69e>
    12b4:	80 37       	cpi	r24, 0x70	; 112
    12b6:	19 f0       	breq	.+6      	; 0x12be <vfprintf+0x522>
    12b8:	88 37       	cpi	r24, 0x78	; 120
    12ba:	11 f0       	breq	.+4      	; 0x12c0 <vfprintf+0x524>
    12bc:	be c0       	rjmp	.+380    	; 0x143a <vfprintf+0x69e>
    12be:	00 61       	ori	r16, 0x10	; 16
    12c0:	04 ff       	sbrs	r16, 4
    12c2:	09 c0       	rjmp	.+18     	; 0x12d6 <vfprintf+0x53a>
    12c4:	04 60       	ori	r16, 0x04	; 4
    12c6:	07 c0       	rjmp	.+14     	; 0x12d6 <vfprintf+0x53a>
    12c8:	94 fe       	sbrs	r9, 4
    12ca:	08 c0       	rjmp	.+16     	; 0x12dc <vfprintf+0x540>
    12cc:	06 60       	ori	r16, 0x06	; 6
    12ce:	06 c0       	rjmp	.+12     	; 0x12dc <vfprintf+0x540>
    12d0:	28 e0       	ldi	r18, 0x08	; 8
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	05 c0       	rjmp	.+10     	; 0x12e0 <vfprintf+0x544>
    12d6:	20 e1       	ldi	r18, 0x10	; 16
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	02 c0       	rjmp	.+4      	; 0x12e0 <vfprintf+0x544>
    12dc:	20 e1       	ldi	r18, 0x10	; 16
    12de:	32 e0       	ldi	r19, 0x02	; 2
    12e0:	56 01       	movw	r10, r12
    12e2:	07 ff       	sbrs	r16, 7
    12e4:	09 c0       	rjmp	.+18     	; 0x12f8 <vfprintf+0x55c>
    12e6:	84 e0       	ldi	r24, 0x04	; 4
    12e8:	a8 0e       	add	r10, r24
    12ea:	b1 1c       	adc	r11, r1
    12ec:	f6 01       	movw	r30, r12
    12ee:	60 81       	ld	r22, Z
    12f0:	71 81       	ldd	r23, Z+1	; 0x01
    12f2:	82 81       	ldd	r24, Z+2	; 0x02
    12f4:	93 81       	ldd	r25, Z+3	; 0x03
    12f6:	08 c0       	rjmp	.+16     	; 0x1308 <vfprintf+0x56c>
    12f8:	f2 e0       	ldi	r31, 0x02	; 2
    12fa:	af 0e       	add	r10, r31
    12fc:	b1 1c       	adc	r11, r1
    12fe:	f6 01       	movw	r30, r12
    1300:	60 81       	ld	r22, Z
    1302:	71 81       	ldd	r23, Z+1	; 0x01
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	a3 01       	movw	r20, r6
    130a:	0e 94 29 0c 	call	0x1852	; 0x1852 <__ultoa_invert>
    130e:	c8 2e       	mov	r12, r24
    1310:	c6 18       	sub	r12, r6
    1312:	0f 77       	andi	r16, 0x7F	; 127
    1314:	90 2e       	mov	r9, r16
    1316:	96 fe       	sbrs	r9, 6
    1318:	0b c0       	rjmp	.+22     	; 0x1330 <vfprintf+0x594>
    131a:	09 2d       	mov	r16, r9
    131c:	0e 7f       	andi	r16, 0xFE	; 254
    131e:	c1 16       	cp	r12, r17
    1320:	50 f4       	brcc	.+20     	; 0x1336 <vfprintf+0x59a>
    1322:	94 fe       	sbrs	r9, 4
    1324:	0a c0       	rjmp	.+20     	; 0x133a <vfprintf+0x59e>
    1326:	92 fc       	sbrc	r9, 2
    1328:	08 c0       	rjmp	.+16     	; 0x133a <vfprintf+0x59e>
    132a:	09 2d       	mov	r16, r9
    132c:	0e 7e       	andi	r16, 0xEE	; 238
    132e:	05 c0       	rjmp	.+10     	; 0x133a <vfprintf+0x59e>
    1330:	dc 2c       	mov	r13, r12
    1332:	09 2d       	mov	r16, r9
    1334:	03 c0       	rjmp	.+6      	; 0x133c <vfprintf+0x5a0>
    1336:	dc 2c       	mov	r13, r12
    1338:	01 c0       	rjmp	.+2      	; 0x133c <vfprintf+0x5a0>
    133a:	d1 2e       	mov	r13, r17
    133c:	04 ff       	sbrs	r16, 4
    133e:	0d c0       	rjmp	.+26     	; 0x135a <vfprintf+0x5be>
    1340:	fe 01       	movw	r30, r28
    1342:	ec 0d       	add	r30, r12
    1344:	f1 1d       	adc	r31, r1
    1346:	80 81       	ld	r24, Z
    1348:	80 33       	cpi	r24, 0x30	; 48
    134a:	11 f4       	brne	.+4      	; 0x1350 <vfprintf+0x5b4>
    134c:	09 7e       	andi	r16, 0xE9	; 233
    134e:	09 c0       	rjmp	.+18     	; 0x1362 <vfprintf+0x5c6>
    1350:	02 ff       	sbrs	r16, 2
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <vfprintf+0x5c4>
    1354:	d3 94       	inc	r13
    1356:	d3 94       	inc	r13
    1358:	04 c0       	rjmp	.+8      	; 0x1362 <vfprintf+0x5c6>
    135a:	80 2f       	mov	r24, r16
    135c:	86 78       	andi	r24, 0x86	; 134
    135e:	09 f0       	breq	.+2      	; 0x1362 <vfprintf+0x5c6>
    1360:	d3 94       	inc	r13
    1362:	03 fd       	sbrc	r16, 3
    1364:	11 c0       	rjmp	.+34     	; 0x1388 <vfprintf+0x5ec>
    1366:	00 ff       	sbrs	r16, 0
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <vfprintf+0x5da>
    136a:	1c 2d       	mov	r17, r12
    136c:	d5 14       	cp	r13, r5
    136e:	80 f4       	brcc	.+32     	; 0x1390 <vfprintf+0x5f4>
    1370:	15 0d       	add	r17, r5
    1372:	1d 19       	sub	r17, r13
    1374:	0d c0       	rjmp	.+26     	; 0x1390 <vfprintf+0x5f4>
    1376:	d5 14       	cp	r13, r5
    1378:	58 f4       	brcc	.+22     	; 0x1390 <vfprintf+0x5f4>
    137a:	b7 01       	movw	r22, r14
    137c:	80 e2       	ldi	r24, 0x20	; 32
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1384:	d3 94       	inc	r13
    1386:	f7 cf       	rjmp	.-18     	; 0x1376 <vfprintf+0x5da>
    1388:	d5 14       	cp	r13, r5
    138a:	10 f4       	brcc	.+4      	; 0x1390 <vfprintf+0x5f4>
    138c:	5d 18       	sub	r5, r13
    138e:	01 c0       	rjmp	.+2      	; 0x1392 <vfprintf+0x5f6>
    1390:	51 2c       	mov	r5, r1
    1392:	04 ff       	sbrs	r16, 4
    1394:	10 c0       	rjmp	.+32     	; 0x13b6 <vfprintf+0x61a>
    1396:	b7 01       	movw	r22, r14
    1398:	80 e3       	ldi	r24, 0x30	; 48
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    13a0:	02 ff       	sbrs	r16, 2
    13a2:	17 c0       	rjmp	.+46     	; 0x13d2 <vfprintf+0x636>
    13a4:	01 fd       	sbrc	r16, 1
    13a6:	03 c0       	rjmp	.+6      	; 0x13ae <vfprintf+0x612>
    13a8:	88 e7       	ldi	r24, 0x78	; 120
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <vfprintf+0x616>
    13ae:	88 e5       	ldi	r24, 0x58	; 88
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	b7 01       	movw	r22, r14
    13b4:	0c c0       	rjmp	.+24     	; 0x13ce <vfprintf+0x632>
    13b6:	80 2f       	mov	r24, r16
    13b8:	86 78       	andi	r24, 0x86	; 134
    13ba:	59 f0       	breq	.+22     	; 0x13d2 <vfprintf+0x636>
    13bc:	01 ff       	sbrs	r16, 1
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <vfprintf+0x628>
    13c0:	8b e2       	ldi	r24, 0x2B	; 43
    13c2:	01 c0       	rjmp	.+2      	; 0x13c6 <vfprintf+0x62a>
    13c4:	80 e2       	ldi	r24, 0x20	; 32
    13c6:	07 fd       	sbrc	r16, 7
    13c8:	8d e2       	ldi	r24, 0x2D	; 45
    13ca:	b7 01       	movw	r22, r14
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    13d2:	c1 16       	cp	r12, r17
    13d4:	38 f4       	brcc	.+14     	; 0x13e4 <vfprintf+0x648>
    13d6:	b7 01       	movw	r22, r14
    13d8:	80 e3       	ldi	r24, 0x30	; 48
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    13e0:	11 50       	subi	r17, 0x01	; 1
    13e2:	f7 cf       	rjmp	.-18     	; 0x13d2 <vfprintf+0x636>
    13e4:	ca 94       	dec	r12
    13e6:	f3 01       	movw	r30, r6
    13e8:	ec 0d       	add	r30, r12
    13ea:	f1 1d       	adc	r31, r1
    13ec:	80 81       	ld	r24, Z
    13ee:	b7 01       	movw	r22, r14
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    13f6:	c1 10       	cpse	r12, r1
    13f8:	f5 cf       	rjmp	.-22     	; 0x13e4 <vfprintf+0x648>
    13fa:	15 c0       	rjmp	.+42     	; 0x1426 <vfprintf+0x68a>
    13fc:	f4 e0       	ldi	r31, 0x04	; 4
    13fe:	f5 15       	cp	r31, r5
    1400:	60 f5       	brcc	.+88     	; 0x145a <vfprintf+0x6be>
    1402:	84 e0       	ldi	r24, 0x04	; 4
    1404:	58 1a       	sub	r5, r24
    1406:	93 fe       	sbrs	r9, 3
    1408:	1f c0       	rjmp	.+62     	; 0x1448 <vfprintf+0x6ac>
    140a:	01 11       	cpse	r16, r1
    140c:	27 c0       	rjmp	.+78     	; 0x145c <vfprintf+0x6c0>
    140e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1410:	23 ff       	sbrs	r18, 3
    1412:	2a c0       	rjmp	.+84     	; 0x1468 <vfprintf+0x6cc>
    1414:	04 eb       	ldi	r16, 0xB4	; 180
    1416:	10 e0       	ldi	r17, 0x00	; 0
    1418:	39 2d       	mov	r19, r9
    141a:	30 71       	andi	r19, 0x10	; 16
    141c:	93 2e       	mov	r9, r19
    141e:	f8 01       	movw	r30, r16
    1420:	84 91       	lpm	r24, Z
    1422:	81 11       	cpse	r24, r1
    1424:	24 c0       	rjmp	.+72     	; 0x146e <vfprintf+0x6d2>
    1426:	55 20       	and	r5, r5
    1428:	09 f4       	brne	.+2      	; 0x142c <vfprintf+0x690>
    142a:	e4 cc       	rjmp	.-1592   	; 0xdf4 <vfprintf+0x58>
    142c:	b7 01       	movw	r22, r14
    142e:	80 e2       	ldi	r24, 0x20	; 32
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1436:	5a 94       	dec	r5
    1438:	f6 cf       	rjmp	.-20     	; 0x1426 <vfprintf+0x68a>
    143a:	f7 01       	movw	r30, r14
    143c:	86 81       	ldd	r24, Z+6	; 0x06
    143e:	97 81       	ldd	r25, Z+7	; 0x07
    1440:	26 c0       	rjmp	.+76     	; 0x148e <vfprintf+0x6f2>
    1442:	8f ef       	ldi	r24, 0xFF	; 255
    1444:	9f ef       	ldi	r25, 0xFF	; 255
    1446:	23 c0       	rjmp	.+70     	; 0x148e <vfprintf+0x6f2>
    1448:	b7 01       	movw	r22, r14
    144a:	80 e2       	ldi	r24, 0x20	; 32
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1452:	5a 94       	dec	r5
    1454:	51 10       	cpse	r5, r1
    1456:	f8 cf       	rjmp	.-16     	; 0x1448 <vfprintf+0x6ac>
    1458:	d8 cf       	rjmp	.-80     	; 0x140a <vfprintf+0x66e>
    145a:	51 2c       	mov	r5, r1
    145c:	b7 01       	movw	r22, r14
    145e:	80 2f       	mov	r24, r16
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    1466:	d3 cf       	rjmp	.-90     	; 0x140e <vfprintf+0x672>
    1468:	08 eb       	ldi	r16, 0xB8	; 184
    146a:	10 e0       	ldi	r17, 0x00	; 0
    146c:	d5 cf       	rjmp	.-86     	; 0x1418 <vfprintf+0x67c>
    146e:	91 10       	cpse	r9, r1
    1470:	80 52       	subi	r24, 0x20	; 32
    1472:	b7 01       	movw	r22, r14
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 77 0b 	call	0x16ee	; 0x16ee <fputc>
    147a:	0f 5f       	subi	r16, 0xFF	; 255
    147c:	1f 4f       	sbci	r17, 0xFF	; 255
    147e:	cf cf       	rjmp	.-98     	; 0x141e <vfprintf+0x682>
    1480:	23 e0       	ldi	r18, 0x03	; 3
    1482:	25 15       	cp	r18, r5
    1484:	10 f4       	brcc	.+4      	; 0x148a <vfprintf+0x6ee>
    1486:	83 e0       	ldi	r24, 0x03	; 3
    1488:	bd cf       	rjmp	.-134    	; 0x1404 <vfprintf+0x668>
    148a:	51 2c       	mov	r5, r1
    148c:	c0 cf       	rjmp	.-128    	; 0x140e <vfprintf+0x672>
    148e:	60 96       	adiw	r28, 0x10	; 16
    1490:	e2 e1       	ldi	r30, 0x12	; 18
    1492:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__epilogue_restores__>

00001496 <__prologue_saves__>:
    1496:	2f 92       	push	r2
    1498:	3f 92       	push	r3
    149a:	4f 92       	push	r4
    149c:	5f 92       	push	r5
    149e:	6f 92       	push	r6
    14a0:	7f 92       	push	r7
    14a2:	8f 92       	push	r8
    14a4:	9f 92       	push	r9
    14a6:	af 92       	push	r10
    14a8:	bf 92       	push	r11
    14aa:	cf 92       	push	r12
    14ac:	df 92       	push	r13
    14ae:	ef 92       	push	r14
    14b0:	ff 92       	push	r15
    14b2:	0f 93       	push	r16
    14b4:	1f 93       	push	r17
    14b6:	cf 93       	push	r28
    14b8:	df 93       	push	r29
    14ba:	cd b7       	in	r28, 0x3d	; 61
    14bc:	de b7       	in	r29, 0x3e	; 62
    14be:	ca 1b       	sub	r28, r26
    14c0:	db 0b       	sbc	r29, r27
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	f8 94       	cli
    14c6:	de bf       	out	0x3e, r29	; 62
    14c8:	0f be       	out	0x3f, r0	; 63
    14ca:	cd bf       	out	0x3d, r28	; 61
    14cc:	09 94       	ijmp

000014ce <__epilogue_restores__>:
    14ce:	2a 88       	ldd	r2, Y+18	; 0x12
    14d0:	39 88       	ldd	r3, Y+17	; 0x11
    14d2:	48 88       	ldd	r4, Y+16	; 0x10
    14d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    14d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    14d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    14da:	8c 84       	ldd	r8, Y+12	; 0x0c
    14dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    14de:	aa 84       	ldd	r10, Y+10	; 0x0a
    14e0:	b9 84       	ldd	r11, Y+9	; 0x09
    14e2:	c8 84       	ldd	r12, Y+8	; 0x08
    14e4:	df 80       	ldd	r13, Y+7	; 0x07
    14e6:	ee 80       	ldd	r14, Y+6	; 0x06
    14e8:	fd 80       	ldd	r15, Y+5	; 0x05
    14ea:	0c 81       	ldd	r16, Y+4	; 0x04
    14ec:	1b 81       	ldd	r17, Y+3	; 0x03
    14ee:	aa 81       	ldd	r26, Y+2	; 0x02
    14f0:	b9 81       	ldd	r27, Y+1	; 0x01
    14f2:	ce 0f       	add	r28, r30
    14f4:	d1 1d       	adc	r29, r1
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
    1500:	ed 01       	movw	r28, r26
    1502:	08 95       	ret

00001504 <__ftoa_engine>:
    1504:	28 30       	cpi	r18, 0x08	; 8
    1506:	08 f0       	brcs	.+2      	; 0x150a <__ftoa_engine+0x6>
    1508:	27 e0       	ldi	r18, 0x07	; 7
    150a:	33 27       	eor	r19, r19
    150c:	da 01       	movw	r26, r20
    150e:	99 0f       	add	r25, r25
    1510:	31 1d       	adc	r19, r1
    1512:	87 fd       	sbrc	r24, 7
    1514:	91 60       	ori	r25, 0x01	; 1
    1516:	00 96       	adiw	r24, 0x00	; 0
    1518:	61 05       	cpc	r22, r1
    151a:	71 05       	cpc	r23, r1
    151c:	39 f4       	brne	.+14     	; 0x152c <__ftoa_engine+0x28>
    151e:	32 60       	ori	r19, 0x02	; 2
    1520:	2e 5f       	subi	r18, 0xFE	; 254
    1522:	3d 93       	st	X+, r19
    1524:	30 e3       	ldi	r19, 0x30	; 48
    1526:	2a 95       	dec	r18
    1528:	e1 f7       	brne	.-8      	; 0x1522 <__ftoa_engine+0x1e>
    152a:	08 95       	ret
    152c:	9f 3f       	cpi	r25, 0xFF	; 255
    152e:	30 f0       	brcs	.+12     	; 0x153c <__ftoa_engine+0x38>
    1530:	80 38       	cpi	r24, 0x80	; 128
    1532:	71 05       	cpc	r23, r1
    1534:	61 05       	cpc	r22, r1
    1536:	09 f0       	breq	.+2      	; 0x153a <__ftoa_engine+0x36>
    1538:	3c 5f       	subi	r19, 0xFC	; 252
    153a:	3c 5f       	subi	r19, 0xFC	; 252
    153c:	3d 93       	st	X+, r19
    153e:	91 30       	cpi	r25, 0x01	; 1
    1540:	08 f0       	brcs	.+2      	; 0x1544 <__ftoa_engine+0x40>
    1542:	80 68       	ori	r24, 0x80	; 128
    1544:	91 1d       	adc	r25, r1
    1546:	df 93       	push	r29
    1548:	cf 93       	push	r28
    154a:	1f 93       	push	r17
    154c:	0f 93       	push	r16
    154e:	ff 92       	push	r15
    1550:	ef 92       	push	r14
    1552:	19 2f       	mov	r17, r25
    1554:	98 7f       	andi	r25, 0xF8	; 248
    1556:	96 95       	lsr	r25
    1558:	e9 2f       	mov	r30, r25
    155a:	96 95       	lsr	r25
    155c:	96 95       	lsr	r25
    155e:	e9 0f       	add	r30, r25
    1560:	ff 27       	eor	r31, r31
    1562:	ea 5e       	subi	r30, 0xEA	; 234
    1564:	fe 4f       	sbci	r31, 0xFE	; 254
    1566:	99 27       	eor	r25, r25
    1568:	33 27       	eor	r19, r19
    156a:	ee 24       	eor	r14, r14
    156c:	ff 24       	eor	r15, r15
    156e:	a7 01       	movw	r20, r14
    1570:	e7 01       	movw	r28, r14
    1572:	05 90       	lpm	r0, Z+
    1574:	08 94       	sec
    1576:	07 94       	ror	r0
    1578:	28 f4       	brcc	.+10     	; 0x1584 <__ftoa_engine+0x80>
    157a:	36 0f       	add	r19, r22
    157c:	e7 1e       	adc	r14, r23
    157e:	f8 1e       	adc	r15, r24
    1580:	49 1f       	adc	r20, r25
    1582:	51 1d       	adc	r21, r1
    1584:	66 0f       	add	r22, r22
    1586:	77 1f       	adc	r23, r23
    1588:	88 1f       	adc	r24, r24
    158a:	99 1f       	adc	r25, r25
    158c:	06 94       	lsr	r0
    158e:	a1 f7       	brne	.-24     	; 0x1578 <__ftoa_engine+0x74>
    1590:	05 90       	lpm	r0, Z+
    1592:	07 94       	ror	r0
    1594:	28 f4       	brcc	.+10     	; 0x15a0 <__ftoa_engine+0x9c>
    1596:	e7 0e       	add	r14, r23
    1598:	f8 1e       	adc	r15, r24
    159a:	49 1f       	adc	r20, r25
    159c:	56 1f       	adc	r21, r22
    159e:	c1 1d       	adc	r28, r1
    15a0:	77 0f       	add	r23, r23
    15a2:	88 1f       	adc	r24, r24
    15a4:	99 1f       	adc	r25, r25
    15a6:	66 1f       	adc	r22, r22
    15a8:	06 94       	lsr	r0
    15aa:	a1 f7       	brne	.-24     	; 0x1594 <__ftoa_engine+0x90>
    15ac:	05 90       	lpm	r0, Z+
    15ae:	07 94       	ror	r0
    15b0:	28 f4       	brcc	.+10     	; 0x15bc <__ftoa_engine+0xb8>
    15b2:	f8 0e       	add	r15, r24
    15b4:	49 1f       	adc	r20, r25
    15b6:	56 1f       	adc	r21, r22
    15b8:	c7 1f       	adc	r28, r23
    15ba:	d1 1d       	adc	r29, r1
    15bc:	88 0f       	add	r24, r24
    15be:	99 1f       	adc	r25, r25
    15c0:	66 1f       	adc	r22, r22
    15c2:	77 1f       	adc	r23, r23
    15c4:	06 94       	lsr	r0
    15c6:	a1 f7       	brne	.-24     	; 0x15b0 <__ftoa_engine+0xac>
    15c8:	05 90       	lpm	r0, Z+
    15ca:	07 94       	ror	r0
    15cc:	20 f4       	brcc	.+8      	; 0x15d6 <__ftoa_engine+0xd2>
    15ce:	49 0f       	add	r20, r25
    15d0:	56 1f       	adc	r21, r22
    15d2:	c7 1f       	adc	r28, r23
    15d4:	d8 1f       	adc	r29, r24
    15d6:	99 0f       	add	r25, r25
    15d8:	66 1f       	adc	r22, r22
    15da:	77 1f       	adc	r23, r23
    15dc:	88 1f       	adc	r24, r24
    15de:	06 94       	lsr	r0
    15e0:	a9 f7       	brne	.-22     	; 0x15cc <__ftoa_engine+0xc8>
    15e2:	84 91       	lpm	r24, Z
    15e4:	10 95       	com	r17
    15e6:	17 70       	andi	r17, 0x07	; 7
    15e8:	41 f0       	breq	.+16     	; 0x15fa <__ftoa_engine+0xf6>
    15ea:	d6 95       	lsr	r29
    15ec:	c7 95       	ror	r28
    15ee:	57 95       	ror	r21
    15f0:	47 95       	ror	r20
    15f2:	f7 94       	ror	r15
    15f4:	e7 94       	ror	r14
    15f6:	1a 95       	dec	r17
    15f8:	c1 f7       	brne	.-16     	; 0x15ea <__ftoa_engine+0xe6>
    15fa:	ec eb       	ldi	r30, 0xBC	; 188
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	68 94       	set
    1600:	15 90       	lpm	r1, Z+
    1602:	15 91       	lpm	r17, Z+
    1604:	35 91       	lpm	r19, Z+
    1606:	65 91       	lpm	r22, Z+
    1608:	95 91       	lpm	r25, Z+
    160a:	05 90       	lpm	r0, Z+
    160c:	7f e2       	ldi	r23, 0x2F	; 47
    160e:	73 95       	inc	r23
    1610:	e1 18       	sub	r14, r1
    1612:	f1 0a       	sbc	r15, r17
    1614:	43 0b       	sbc	r20, r19
    1616:	56 0b       	sbc	r21, r22
    1618:	c9 0b       	sbc	r28, r25
    161a:	d0 09       	sbc	r29, r0
    161c:	c0 f7       	brcc	.-16     	; 0x160e <__ftoa_engine+0x10a>
    161e:	e1 0c       	add	r14, r1
    1620:	f1 1e       	adc	r15, r17
    1622:	43 1f       	adc	r20, r19
    1624:	56 1f       	adc	r21, r22
    1626:	c9 1f       	adc	r28, r25
    1628:	d0 1d       	adc	r29, r0
    162a:	7e f4       	brtc	.+30     	; 0x164a <__ftoa_engine+0x146>
    162c:	70 33       	cpi	r23, 0x30	; 48
    162e:	11 f4       	brne	.+4      	; 0x1634 <__ftoa_engine+0x130>
    1630:	8a 95       	dec	r24
    1632:	e6 cf       	rjmp	.-52     	; 0x1600 <__ftoa_engine+0xfc>
    1634:	e8 94       	clt
    1636:	01 50       	subi	r16, 0x01	; 1
    1638:	30 f0       	brcs	.+12     	; 0x1646 <__ftoa_engine+0x142>
    163a:	08 0f       	add	r16, r24
    163c:	0a f4       	brpl	.+2      	; 0x1640 <__ftoa_engine+0x13c>
    163e:	00 27       	eor	r16, r16
    1640:	02 17       	cp	r16, r18
    1642:	08 f4       	brcc	.+2      	; 0x1646 <__ftoa_engine+0x142>
    1644:	20 2f       	mov	r18, r16
    1646:	23 95       	inc	r18
    1648:	02 2f       	mov	r16, r18
    164a:	7a 33       	cpi	r23, 0x3A	; 58
    164c:	28 f0       	brcs	.+10     	; 0x1658 <__ftoa_engine+0x154>
    164e:	79 e3       	ldi	r23, 0x39	; 57
    1650:	7d 93       	st	X+, r23
    1652:	2a 95       	dec	r18
    1654:	e9 f7       	brne	.-6      	; 0x1650 <__ftoa_engine+0x14c>
    1656:	10 c0       	rjmp	.+32     	; 0x1678 <__ftoa_engine+0x174>
    1658:	7d 93       	st	X+, r23
    165a:	2a 95       	dec	r18
    165c:	89 f6       	brne	.-94     	; 0x1600 <__ftoa_engine+0xfc>
    165e:	06 94       	lsr	r0
    1660:	97 95       	ror	r25
    1662:	67 95       	ror	r22
    1664:	37 95       	ror	r19
    1666:	17 95       	ror	r17
    1668:	17 94       	ror	r1
    166a:	e1 18       	sub	r14, r1
    166c:	f1 0a       	sbc	r15, r17
    166e:	43 0b       	sbc	r20, r19
    1670:	56 0b       	sbc	r21, r22
    1672:	c9 0b       	sbc	r28, r25
    1674:	d0 09       	sbc	r29, r0
    1676:	98 f0       	brcs	.+38     	; 0x169e <__ftoa_engine+0x19a>
    1678:	23 95       	inc	r18
    167a:	7e 91       	ld	r23, -X
    167c:	73 95       	inc	r23
    167e:	7a 33       	cpi	r23, 0x3A	; 58
    1680:	08 f0       	brcs	.+2      	; 0x1684 <__ftoa_engine+0x180>
    1682:	70 e3       	ldi	r23, 0x30	; 48
    1684:	7c 93       	st	X, r23
    1686:	20 13       	cpse	r18, r16
    1688:	b8 f7       	brcc	.-18     	; 0x1678 <__ftoa_engine+0x174>
    168a:	7e 91       	ld	r23, -X
    168c:	70 61       	ori	r23, 0x10	; 16
    168e:	7d 93       	st	X+, r23
    1690:	30 f0       	brcs	.+12     	; 0x169e <__ftoa_engine+0x19a>
    1692:	83 95       	inc	r24
    1694:	71 e3       	ldi	r23, 0x31	; 49
    1696:	7d 93       	st	X+, r23
    1698:	70 e3       	ldi	r23, 0x30	; 48
    169a:	2a 95       	dec	r18
    169c:	e1 f7       	brne	.-8      	; 0x1696 <__ftoa_engine+0x192>
    169e:	11 24       	eor	r1, r1
    16a0:	ef 90       	pop	r14
    16a2:	ff 90       	pop	r15
    16a4:	0f 91       	pop	r16
    16a6:	1f 91       	pop	r17
    16a8:	cf 91       	pop	r28
    16aa:	df 91       	pop	r29
    16ac:	99 27       	eor	r25, r25
    16ae:	87 fd       	sbrc	r24, 7
    16b0:	90 95       	com	r25
    16b2:	08 95       	ret

000016b4 <strnlen_P>:
    16b4:	fc 01       	movw	r30, r24
    16b6:	05 90       	lpm	r0, Z+
    16b8:	61 50       	subi	r22, 0x01	; 1
    16ba:	70 40       	sbci	r23, 0x00	; 0
    16bc:	01 10       	cpse	r0, r1
    16be:	d8 f7       	brcc	.-10     	; 0x16b6 <strnlen_P+0x2>
    16c0:	80 95       	com	r24
    16c2:	90 95       	com	r25
    16c4:	8e 0f       	add	r24, r30
    16c6:	9f 1f       	adc	r25, r31
    16c8:	08 95       	ret

000016ca <strcpy>:
    16ca:	fb 01       	movw	r30, r22
    16cc:	dc 01       	movw	r26, r24
    16ce:	01 90       	ld	r0, Z+
    16d0:	0d 92       	st	X+, r0
    16d2:	00 20       	and	r0, r0
    16d4:	e1 f7       	brne	.-8      	; 0x16ce <strcpy+0x4>
    16d6:	08 95       	ret

000016d8 <strnlen>:
    16d8:	fc 01       	movw	r30, r24
    16da:	61 50       	subi	r22, 0x01	; 1
    16dc:	70 40       	sbci	r23, 0x00	; 0
    16de:	01 90       	ld	r0, Z+
    16e0:	01 10       	cpse	r0, r1
    16e2:	d8 f7       	brcc	.-10     	; 0x16da <strnlen+0x2>
    16e4:	80 95       	com	r24
    16e6:	90 95       	com	r25
    16e8:	8e 0f       	add	r24, r30
    16ea:	9f 1f       	adc	r25, r31
    16ec:	08 95       	ret

000016ee <fputc>:
    16ee:	0f 93       	push	r16
    16f0:	1f 93       	push	r17
    16f2:	cf 93       	push	r28
    16f4:	df 93       	push	r29
    16f6:	fb 01       	movw	r30, r22
    16f8:	23 81       	ldd	r18, Z+3	; 0x03
    16fa:	21 fd       	sbrc	r18, 1
    16fc:	03 c0       	rjmp	.+6      	; 0x1704 <fputc+0x16>
    16fe:	8f ef       	ldi	r24, 0xFF	; 255
    1700:	9f ef       	ldi	r25, 0xFF	; 255
    1702:	2c c0       	rjmp	.+88     	; 0x175c <fputc+0x6e>
    1704:	22 ff       	sbrs	r18, 2
    1706:	16 c0       	rjmp	.+44     	; 0x1734 <fputc+0x46>
    1708:	46 81       	ldd	r20, Z+6	; 0x06
    170a:	57 81       	ldd	r21, Z+7	; 0x07
    170c:	24 81       	ldd	r18, Z+4	; 0x04
    170e:	35 81       	ldd	r19, Z+5	; 0x05
    1710:	42 17       	cp	r20, r18
    1712:	53 07       	cpc	r21, r19
    1714:	44 f4       	brge	.+16     	; 0x1726 <fputc+0x38>
    1716:	a0 81       	ld	r26, Z
    1718:	b1 81       	ldd	r27, Z+1	; 0x01
    171a:	9d 01       	movw	r18, r26
    171c:	2f 5f       	subi	r18, 0xFF	; 255
    171e:	3f 4f       	sbci	r19, 0xFF	; 255
    1720:	31 83       	std	Z+1, r19	; 0x01
    1722:	20 83       	st	Z, r18
    1724:	8c 93       	st	X, r24
    1726:	26 81       	ldd	r18, Z+6	; 0x06
    1728:	37 81       	ldd	r19, Z+7	; 0x07
    172a:	2f 5f       	subi	r18, 0xFF	; 255
    172c:	3f 4f       	sbci	r19, 0xFF	; 255
    172e:	37 83       	std	Z+7, r19	; 0x07
    1730:	26 83       	std	Z+6, r18	; 0x06
    1732:	14 c0       	rjmp	.+40     	; 0x175c <fputc+0x6e>
    1734:	8b 01       	movw	r16, r22
    1736:	ec 01       	movw	r28, r24
    1738:	fb 01       	movw	r30, r22
    173a:	00 84       	ldd	r0, Z+8	; 0x08
    173c:	f1 85       	ldd	r31, Z+9	; 0x09
    173e:	e0 2d       	mov	r30, r0
    1740:	09 95       	icall
    1742:	89 2b       	or	r24, r25
    1744:	e1 f6       	brne	.-72     	; 0x16fe <fputc+0x10>
    1746:	d8 01       	movw	r26, r16
    1748:	16 96       	adiw	r26, 0x06	; 6
    174a:	8d 91       	ld	r24, X+
    174c:	9c 91       	ld	r25, X
    174e:	17 97       	sbiw	r26, 0x07	; 7
    1750:	01 96       	adiw	r24, 0x01	; 1
    1752:	17 96       	adiw	r26, 0x07	; 7
    1754:	9c 93       	st	X, r25
    1756:	8e 93       	st	-X, r24
    1758:	16 97       	sbiw	r26, 0x06	; 6
    175a:	ce 01       	movw	r24, r28
    175c:	df 91       	pop	r29
    175e:	cf 91       	pop	r28
    1760:	1f 91       	pop	r17
    1762:	0f 91       	pop	r16
    1764:	08 95       	ret

00001766 <printf>:
    1766:	a0 e0       	ldi	r26, 0x00	; 0
    1768:	b0 e0       	ldi	r27, 0x00	; 0
    176a:	e9 eb       	ldi	r30, 0xB9	; 185
    176c:	fb e0       	ldi	r31, 0x0B	; 11
    176e:	0c 94 5b 0a 	jmp	0x14b6	; 0x14b6 <__prologue_saves__+0x20>
    1772:	ae 01       	movw	r20, r28
    1774:	4b 5f       	subi	r20, 0xFB	; 251
    1776:	5f 4f       	sbci	r21, 0xFF	; 255
    1778:	fa 01       	movw	r30, r20
    177a:	61 91       	ld	r22, Z+
    177c:	71 91       	ld	r23, Z+
    177e:	af 01       	movw	r20, r30
    1780:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <__iob+0x2>
    1784:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <__iob+0x3>
    1788:	0e 94 ce 06 	call	0xd9c	; 0xd9c <vfprintf>
    178c:	e2 e0       	ldi	r30, 0x02	; 2
    178e:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <__epilogue_restores__+0x20>

00001792 <puts>:
    1792:	0f 93       	push	r16
    1794:	1f 93       	push	r17
    1796:	cf 93       	push	r28
    1798:	df 93       	push	r29
    179a:	e0 91 c9 02 	lds	r30, 0x02C9	; 0x8002c9 <__iob+0x2>
    179e:	f0 91 ca 02 	lds	r31, 0x02CA	; 0x8002ca <__iob+0x3>
    17a2:	23 81       	ldd	r18, Z+3	; 0x03
    17a4:	21 ff       	sbrs	r18, 1
    17a6:	1b c0       	rjmp	.+54     	; 0x17de <puts+0x4c>
    17a8:	8c 01       	movw	r16, r24
    17aa:	d0 e0       	ldi	r29, 0x00	; 0
    17ac:	c0 e0       	ldi	r28, 0x00	; 0
    17ae:	f8 01       	movw	r30, r16
    17b0:	81 91       	ld	r24, Z+
    17b2:	8f 01       	movw	r16, r30
    17b4:	60 91 c9 02 	lds	r22, 0x02C9	; 0x8002c9 <__iob+0x2>
    17b8:	70 91 ca 02 	lds	r23, 0x02CA	; 0x8002ca <__iob+0x3>
    17bc:	db 01       	movw	r26, r22
    17be:	18 96       	adiw	r26, 0x08	; 8
    17c0:	ed 91       	ld	r30, X+
    17c2:	fc 91       	ld	r31, X
    17c4:	19 97       	sbiw	r26, 0x09	; 9
    17c6:	88 23       	and	r24, r24
    17c8:	31 f0       	breq	.+12     	; 0x17d6 <puts+0x44>
    17ca:	09 95       	icall
    17cc:	89 2b       	or	r24, r25
    17ce:	79 f3       	breq	.-34     	; 0x17ae <puts+0x1c>
    17d0:	df ef       	ldi	r29, 0xFF	; 255
    17d2:	cf ef       	ldi	r28, 0xFF	; 255
    17d4:	ec cf       	rjmp	.-40     	; 0x17ae <puts+0x1c>
    17d6:	8a e0       	ldi	r24, 0x0A	; 10
    17d8:	09 95       	icall
    17da:	89 2b       	or	r24, r25
    17dc:	19 f0       	breq	.+6      	; 0x17e4 <puts+0x52>
    17de:	8f ef       	ldi	r24, 0xFF	; 255
    17e0:	9f ef       	ldi	r25, 0xFF	; 255
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <puts+0x56>
    17e4:	8d 2f       	mov	r24, r29
    17e6:	9c 2f       	mov	r25, r28
    17e8:	df 91       	pop	r29
    17ea:	cf 91       	pop	r28
    17ec:	1f 91       	pop	r17
    17ee:	0f 91       	pop	r16
    17f0:	08 95       	ret

000017f2 <snprintf>:
    17f2:	ae e0       	ldi	r26, 0x0E	; 14
    17f4:	b0 e0       	ldi	r27, 0x00	; 0
    17f6:	ef ef       	ldi	r30, 0xFF	; 255
    17f8:	fb e0       	ldi	r31, 0x0B	; 11
    17fa:	0c 94 59 0a 	jmp	0x14b2	; 0x14b2 <__prologue_saves__+0x1c>
    17fe:	0d 89       	ldd	r16, Y+21	; 0x15
    1800:	1e 89       	ldd	r17, Y+22	; 0x16
    1802:	8f 89       	ldd	r24, Y+23	; 0x17
    1804:	98 8d       	ldd	r25, Y+24	; 0x18
    1806:	26 e0       	ldi	r18, 0x06	; 6
    1808:	2c 83       	std	Y+4, r18	; 0x04
    180a:	1a 83       	std	Y+2, r17	; 0x02
    180c:	09 83       	std	Y+1, r16	; 0x01
    180e:	97 ff       	sbrs	r25, 7
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <snprintf+0x24>
    1812:	80 e0       	ldi	r24, 0x00	; 0
    1814:	90 e8       	ldi	r25, 0x80	; 128
    1816:	01 97       	sbiw	r24, 0x01	; 1
    1818:	9e 83       	std	Y+6, r25	; 0x06
    181a:	8d 83       	std	Y+5, r24	; 0x05
    181c:	ae 01       	movw	r20, r28
    181e:	45 5e       	subi	r20, 0xE5	; 229
    1820:	5f 4f       	sbci	r21, 0xFF	; 255
    1822:	69 8d       	ldd	r22, Y+25	; 0x19
    1824:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1826:	ce 01       	movw	r24, r28
    1828:	01 96       	adiw	r24, 0x01	; 1
    182a:	0e 94 ce 06 	call	0xd9c	; 0xd9c <vfprintf>
    182e:	4d 81       	ldd	r20, Y+5	; 0x05
    1830:	5e 81       	ldd	r21, Y+6	; 0x06
    1832:	57 fd       	sbrc	r21, 7
    1834:	0a c0       	rjmp	.+20     	; 0x184a <snprintf+0x58>
    1836:	2f 81       	ldd	r18, Y+7	; 0x07
    1838:	38 85       	ldd	r19, Y+8	; 0x08
    183a:	42 17       	cp	r20, r18
    183c:	53 07       	cpc	r21, r19
    183e:	0c f4       	brge	.+2      	; 0x1842 <snprintf+0x50>
    1840:	9a 01       	movw	r18, r20
    1842:	f8 01       	movw	r30, r16
    1844:	e2 0f       	add	r30, r18
    1846:	f3 1f       	adc	r31, r19
    1848:	10 82       	st	Z, r1
    184a:	2e 96       	adiw	r28, 0x0e	; 14
    184c:	e4 e0       	ldi	r30, 0x04	; 4
    184e:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__epilogue_restores__+0x1c>

00001852 <__ultoa_invert>:
    1852:	fa 01       	movw	r30, r20
    1854:	aa 27       	eor	r26, r26
    1856:	28 30       	cpi	r18, 0x08	; 8
    1858:	51 f1       	breq	.+84     	; 0x18ae <__ultoa_invert+0x5c>
    185a:	20 31       	cpi	r18, 0x10	; 16
    185c:	81 f1       	breq	.+96     	; 0x18be <__ultoa_invert+0x6c>
    185e:	e8 94       	clt
    1860:	6f 93       	push	r22
    1862:	6e 7f       	andi	r22, 0xFE	; 254
    1864:	6e 5f       	subi	r22, 0xFE	; 254
    1866:	7f 4f       	sbci	r23, 0xFF	; 255
    1868:	8f 4f       	sbci	r24, 0xFF	; 255
    186a:	9f 4f       	sbci	r25, 0xFF	; 255
    186c:	af 4f       	sbci	r26, 0xFF	; 255
    186e:	b1 e0       	ldi	r27, 0x01	; 1
    1870:	3e d0       	rcall	.+124    	; 0x18ee <__ultoa_invert+0x9c>
    1872:	b4 e0       	ldi	r27, 0x04	; 4
    1874:	3c d0       	rcall	.+120    	; 0x18ee <__ultoa_invert+0x9c>
    1876:	67 0f       	add	r22, r23
    1878:	78 1f       	adc	r23, r24
    187a:	89 1f       	adc	r24, r25
    187c:	9a 1f       	adc	r25, r26
    187e:	a1 1d       	adc	r26, r1
    1880:	68 0f       	add	r22, r24
    1882:	79 1f       	adc	r23, r25
    1884:	8a 1f       	adc	r24, r26
    1886:	91 1d       	adc	r25, r1
    1888:	a1 1d       	adc	r26, r1
    188a:	6a 0f       	add	r22, r26
    188c:	71 1d       	adc	r23, r1
    188e:	81 1d       	adc	r24, r1
    1890:	91 1d       	adc	r25, r1
    1892:	a1 1d       	adc	r26, r1
    1894:	20 d0       	rcall	.+64     	; 0x18d6 <__ultoa_invert+0x84>
    1896:	09 f4       	brne	.+2      	; 0x189a <__ultoa_invert+0x48>
    1898:	68 94       	set
    189a:	3f 91       	pop	r19
    189c:	2a e0       	ldi	r18, 0x0A	; 10
    189e:	26 9f       	mul	r18, r22
    18a0:	11 24       	eor	r1, r1
    18a2:	30 19       	sub	r19, r0
    18a4:	30 5d       	subi	r19, 0xD0	; 208
    18a6:	31 93       	st	Z+, r19
    18a8:	de f6       	brtc	.-74     	; 0x1860 <__ultoa_invert+0xe>
    18aa:	cf 01       	movw	r24, r30
    18ac:	08 95       	ret
    18ae:	46 2f       	mov	r20, r22
    18b0:	47 70       	andi	r20, 0x07	; 7
    18b2:	40 5d       	subi	r20, 0xD0	; 208
    18b4:	41 93       	st	Z+, r20
    18b6:	b3 e0       	ldi	r27, 0x03	; 3
    18b8:	0f d0       	rcall	.+30     	; 0x18d8 <__ultoa_invert+0x86>
    18ba:	c9 f7       	brne	.-14     	; 0x18ae <__ultoa_invert+0x5c>
    18bc:	f6 cf       	rjmp	.-20     	; 0x18aa <__ultoa_invert+0x58>
    18be:	46 2f       	mov	r20, r22
    18c0:	4f 70       	andi	r20, 0x0F	; 15
    18c2:	40 5d       	subi	r20, 0xD0	; 208
    18c4:	4a 33       	cpi	r20, 0x3A	; 58
    18c6:	18 f0       	brcs	.+6      	; 0x18ce <__ultoa_invert+0x7c>
    18c8:	49 5d       	subi	r20, 0xD9	; 217
    18ca:	31 fd       	sbrc	r19, 1
    18cc:	40 52       	subi	r20, 0x20	; 32
    18ce:	41 93       	st	Z+, r20
    18d0:	02 d0       	rcall	.+4      	; 0x18d6 <__ultoa_invert+0x84>
    18d2:	a9 f7       	brne	.-22     	; 0x18be <__ultoa_invert+0x6c>
    18d4:	ea cf       	rjmp	.-44     	; 0x18aa <__ultoa_invert+0x58>
    18d6:	b4 e0       	ldi	r27, 0x04	; 4
    18d8:	a6 95       	lsr	r26
    18da:	97 95       	ror	r25
    18dc:	87 95       	ror	r24
    18de:	77 95       	ror	r23
    18e0:	67 95       	ror	r22
    18e2:	ba 95       	dec	r27
    18e4:	c9 f7       	brne	.-14     	; 0x18d8 <__ultoa_invert+0x86>
    18e6:	00 97       	sbiw	r24, 0x00	; 0
    18e8:	61 05       	cpc	r22, r1
    18ea:	71 05       	cpc	r23, r1
    18ec:	08 95       	ret
    18ee:	9b 01       	movw	r18, r22
    18f0:	ac 01       	movw	r20, r24
    18f2:	0a 2e       	mov	r0, r26
    18f4:	06 94       	lsr	r0
    18f6:	57 95       	ror	r21
    18f8:	47 95       	ror	r20
    18fa:	37 95       	ror	r19
    18fc:	27 95       	ror	r18
    18fe:	ba 95       	dec	r27
    1900:	c9 f7       	brne	.-14     	; 0x18f4 <__ultoa_invert+0xa2>
    1902:	62 0f       	add	r22, r18
    1904:	73 1f       	adc	r23, r19
    1906:	84 1f       	adc	r24, r20
    1908:	95 1f       	adc	r25, r21
    190a:	a0 1d       	adc	r26, r0
    190c:	08 95       	ret

0000190e <_exit>:
    190e:	f8 94       	cli

00001910 <__stop_program>:
    1910:	ff cf       	rjmp	.-2      	; 0x1910 <__stop_program>
